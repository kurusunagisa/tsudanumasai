{"mappings":"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","sources":["node_modules/p5.play/p5.play.js"],"sourcesContent":["/**\n * p5.play\n *\n * @version 3\n * @author quinton-ashley\n * @year 2022\n * @license gpl-v3-only\n * @descripton p5.play is a 2D game engine that uses planck (Box2D) to simulate\n * physics and provides sprites, a tile system, input handling, and animations!\n *\n * Created by Quinton Ashley @qashto, 2022\n * https://quintos.org\n *\n * Initiated by Paolo Pedercini @molleindustria, 2015\n * https://molleindustria.org/\n */\np5.prototype.registerMethod('init', function p5PlayInit() {\n\tconst log = console.log; // shortcut\n\tthis.log = console.log;\n\n\t// store a reference to the p5 instance that p5play is being added to\n\tlet pInst = this;\n\t// change the angle mode to degrees\n\tthis.angleMode(p5.prototype.DEGREES);\n\n\tif (typeof window.planck == 'undefined') {\n\t\tthrow new Error('planck.js must be loaded before p5.play');\n\t}\n\n\tconst pl = planck;\n\t// set the velocity threshold to allow for slow moving objects\n\tpl.Settings.velocityThreshold = 0.19;\n\tlet plScale = 60;\n\n\tthis.p5play = this.p5play || {\n\t\tos: {\n\t\t\temulated: false\n\t\t}\n\t};\n\tthis.p5play.autoDrawSprites ??= true;\n\tthis.p5play.autoUpdateSprites ??= true;\n\tthis.p5play.mouseTracking ??= true;\n\tthis.p5play.mouseSprite = null;\n\tthis.p5play.mouseSprites = [];\n\tthis.p5play.standardizeKeyboard = false;\n\n\tconst scaleTo = ({ x, y }, tileSize) => new pl.Vec2((x * tileSize) / plScale, (y * tileSize) / plScale);\n\tconst scaleFrom = ({ x, y }, tileSize) => new pl.Vec2((x / tileSize) * plScale, (y / tileSize) * plScale);\n\tconst fixRound = (val) => (Math.abs(val - Math.round(val)) <= pl.Settings.linearSlop ? Math.round(val) : val);\n\tconst isArrowFunction = (fn) =>\n\t\t!/^(?:(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)|(?:\\/\\/[^\\r\\n]*))*\\s*(?:(?:(?:async\\s(?:(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)|(?:\\/\\/[^\\r\\n]*))*\\s*)?function|class)(?:\\s|(?:(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)|(?:\\/\\/[^\\r\\n]*))*)|(?:[_$\\w][\\w0-9_$]*\\s*(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)*\\s*\\()|(?:\\[\\s*(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)*\\s*(?:(?:['][^']+['])|(?:[\"][^\"]+[\"]))\\s*(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)*\\s*\\]\\())/.test(\n\t\t\tfn.toString()\n\t\t);\n\n\tlet spriteProps = [\n\t\t'bounciness',\n\t\t'collider',\n\t\t'color',\n\t\t'density',\n\t\t'd',\n\t\t'debug',\n\t\t'diameter',\n\t\t'direction',\n\t\t// 'directionLock',\n\t\t'drag',\n\t\t'dynamic',\n\t\t'friction',\n\t\t'h',\n\t\t'height',\n\t\t'heading',\n\t\t'isSuperFast',\n\t\t'kinematic',\n\t\t'layer',\n\t\t'life',\n\t\t'mass',\n\t\t'rotation',\n\t\t'rotationDrag',\n\t\t'rotationLock',\n\t\t'rotationSpeed',\n\t\t'scale',\n\t\t'shape',\n\t\t'speed',\n\t\t'static',\n\t\t'text',\n\t\t'textColor',\n\t\t'tileSize',\n\t\t'visible',\n\t\t'w',\n\t\t'width',\n\t\t'x',\n\t\t'xLock',\n\t\t'y',\n\t\t'yLock'\n\t];\n\n\tlet eventTypes = {\n\t\t_collisions: ['_collides', '_colliding', '_collided'],\n\t\t_overlappers: ['_overlaps', '_overlapping', '_overlapped']\n\t};\n\n\t/**\n\t * Look at the Sprite reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/sprite.html\n\t *\n\t * Every sprite you create is added to the allSprites\n\t * group and put on the top layer, in front of all other\n\t * previously created sprites.\n\t *\n\t * @example\n\t *\n\t *   let rectangle = new Sprite(x, y, width, height);\n\t *\n\t *   let circle = new Sprite(x, y, diameter);\n\t *\n\t *   let line = new Sprite(x, y, [length, angle]);\n\t *\n\t *   let chain = new Sprite(x, y, [length0, angle0, length1, angle1]);\n\t *\n\t * @class Sprite\n\t * @constructor\n\t * @param {String|SpriteAnimation|p5.Image} [aniName|ani|image]\n\t * @param {Number} x Horizontal position of the sprite\n\t * @param {Number} y Vertical position of the sprite\n\t * @param {Number} [width|diameter] Width of the placeholder rectangle and of\n\t * the collider until an image or new collider are set. *OR* If height is not\n\t * set then this parameter becomes the diameter of the placeholder circle.\n\t * @param {Number} [height] Height of the placeholder rectangle and of the collider\n\t * until an image or new collider are set\n\t * @param {String} [physics] collider type is 'dynamic' by default, can be\n\t * 'static', 'kinematic', or 'none'\n\t */\n\tclass Sprite {\n\t\tconstructor(x, y, w, h, collider) {\n\t\t\tthis.idNum = pInst.world.spritesCreated;\n\t\t\tpInst.world.spritesCreated++;\n\t\t\tthis.p = pInst;\n\n\t\t\tlet args = [...arguments];\n\n\t\t\tlet group, ani;\n\n\t\t\tif (args[0] !== undefined && args[0] instanceof Group) {\n\t\t\t\tgroup = args[0];\n\t\t\t\targs = args.slice(1);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\targs[0] !== undefined &&\n\t\t\t\tisNaN(args[0]) &&\n\t\t\t\t(typeof args[0] == 'string' || args[0] instanceof SpriteAnimation || args[0] instanceof p5.Image)\n\t\t\t) {\n\t\t\t\t// shift\n\t\t\t\tani = args[0];\n\t\t\t\targs = args.slice(1);\n\t\t\t}\n\n\t\t\tif (args.length == 1 && typeof args[0] == 'number') {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Invalid input parameters for the Sprite constructor. You can't only have one number! Specify both the x and y position of the sprite\"\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tx = args[0];\n\t\t\ty = args[1];\n\t\t\tw = args[2];\n\t\t\th = args[3];\n\t\t\tcollider = args[4];\n\t\t\tthis.originMode = 'center';\n\n\t\t\tif (Array.isArray(x)) {\n\t\t\t\tx = undefined;\n\t\t\t\ty = undefined;\n\t\t\t\tw = args[0];\n\t\t\t\th = args[1];\n\t\t\t\tcollider = args[2];\n\t\t\t}\n\n\t\t\t// if (w is chain array) or (diameter/side length and h is a\n\t\t\t// collider type or the name of a regular polygon)\n\t\t\tif (Array.isArray(w) || typeof h == 'string') {\n\t\t\t\tif (!isNaN(w)) w = Number(w);\n\t\t\t\tif (typeof w != 'number' && Array.isArray(w[0])) {\n\t\t\t\t\tthis.originMode = 'start';\n\t\t\t\t}\n\t\t\t\tif (h !== undefined) {\n\t\t\t\t\tlet abr = h.slice(0, 2);\n\t\t\t\t\t// h is a collider type\n\t\t\t\t\tif (abr == 'dy' || abr == 'st' || abr == 'ki' || abr == 'no') {\n\t\t\t\t\t\tcollider = h;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// h is the name of a regular polygon\n\t\t\t\t\t\tif (h == 'circle') h == undefined;\n\t\t\t\t\t\telse if (h == 'triangle') w = [w, -120, 3];\n\t\t\t\t\t\telse if (h == 'square') w = [w, -90, 4];\n\t\t\t\t\t\telse if (h == 'pentagon') w = [w, -72, 5];\n\t\t\t\t\t\telse if (h == 'hexagon') w = [w, -60, 6];\n\t\t\t\t\t\telse if (h == 'septagon') w = [w, -51.4285714286, 7];\n\t\t\t\t\t\telse if (h == 'octagon') w = [w, -45, 8];\n\t\t\t\t\t\telse if (h == 'enneagon') w = [w, -40, 9];\n\t\t\t\t\t\telse if (h == 'decagon') w = [w, -36, 10];\n\t\t\t\t\t\telse if (h == 'hendecagon') w = [w, -32.7272727273, 11];\n\t\t\t\t\t\telse if (h == 'dodecagon') w = [w, -30, 12];\n\t\t\t\t\t}\n\t\t\t\t\th = undefined;\n\t\t\t\t}\n\t\t\t} else if (isNaN(w)) {\n\t\t\t\tcollider = w;\n\t\t\t\tw = undefined;\n\t\t\t}\n\n\t\t\tif (collider !== undefined) {\n\t\t\t\tcollider = collider.toLowerCase();\n\t\t\t\tlet abr = collider.slice(0, 2);\n\t\t\t\tif (abr == 'dy') collider = 'dynamic';\n\t\t\t\tif (abr == 'st') collider = 'static';\n\t\t\t\tif (abr == 'ki') collider = 'kinematic';\n\t\t\t\tif (abr == 'no') collider = 'none';\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Groups the sprite belongs to, including allSprites\n\t\t\t *\n\t\t\t * @property groups\n\t\t\t * @type {Array}\n\t\t\t */\n\t\t\tthis.groups = [];\n\t\t\tthis.p.allSprites.push(this);\n\n\t\t\t/**\n\t\t\t * Keys are the animation label, values are SpriteAnimation objects.\n\t\t\t *\n\t\t\t * @property animations\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tthis.animations = {};\n\n\t\t\t/**\n\t\t\t * If false, animations that are stopped before they are completed,\n\t\t\t * typically by a call to sprite.changeAni, will start at the frame\n\t\t\t * they were stopped at. If true, animations will always start playing from\n\t\t\t * frame 0 unless specified by the user in a separate anim.changeFrame\n\t\t\t * call.\n\t\t\t *\n\t\t\t * @property autoResetAnimations\n\t\t\t * @type {SpriteAnimation}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.autoResetAnimations;\n\n\t\t\t/**\n\t\t\t * True if the sprite was removed from the world\n\t\t\t *\n\t\t\t * @property removed\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.removed = false;\n\n\t\t\tif (group) {\n\t\t\t\tgroup.push(this);\n\t\t\t\tif (!ani) {\n\t\t\t\t\tfor (let _ani in group.animations) {\n\t\t\t\t\t\tani = _ani;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgroup = this.p.allSprites;\n\t\t\t}\n\n\t\t\tif (group.dynamic) collider ??= 'dynamic';\n\t\t\tif (group.kinematic) collider ??= 'kinematic';\n\t\t\tif (group.static) collider ??= 'static';\n\t\t\tcollider ??= group.collider;\n\n\t\t\tthis._shape = group.shape;\n\n\t\t\t/**\n\t\t\t * Cycles before self removal.\n\t\t\t * Set it to initiate a countdown, every draw cycle the property is\n\t\t\t * reduced by 1 unit. If less than or equal to 0, this sprite will be removed.\n\t\t\t *\n\t\t\t * @property life\n\t\t\t * @type {Number}\n\t\t\t * @default 100000000\n\t\t\t */\n\t\t\tthis.life = 100000000;\n\n\t\t\t/**\n\t\t\t * The sprite's visibility.\n\t\t\t *\n\t\t\t * @property visible\n\t\t\t * @type {Boolean}\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.visible = true;\n\n\t\t\t/**\n\t\t\t * Contains all the collision callback functions for this sprite\n\t\t\t * when it comes in contact with other sprites or groups.\n\t\t\t */\n\t\t\tthis._collides = {};\n\t\t\tthis._colliding = {};\n\t\t\tthis._collided = {};\n\n\t\t\tthis._overlap = {};\n\t\t\t/**\n\t\t\t * Contains all the overlap callback functions for this sprite\n\t\t\t * when it comes in contact with other sprites or groups.\n\t\t\t */\n\t\t\tthis._overlaps = {};\n\t\t\tthis._overlapping = {};\n\t\t\tthis._overlapped = {};\n\n\t\t\tthis._collisions = new Map();\n\t\t\tthis._overlappers = new Map();\n\n\t\t\tthis.tileSize = group.tileSize;\n\n\t\t\tlet _this = this;\n\n\t\t\t/**\n\t\t\t * Set position using .x and .y instead.\n\t\t\t *\n\t\t\t * @deprecated\n\t\t\t */\n\t\t\tthis.position = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn _this.x;\n\t\t\t\t},\n\t\t\t\tset x(val) {\n\t\t\t\t\t_this.x = val;\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn _this.y;\n\t\t\t\t},\n\t\t\t\tset y(val) {\n\t\t\t\t\t_this.y = val;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._pos = {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t};\n\n\t\t\tthis._vel = {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * A vector representing how fast the sprite is moving horizontally\n\t\t\t * and vertically.\n\t\t\t *\n\t\t\t * @property vel\n\t\t\t */\n\t\t\tthis.vel = {\n\t\t\t\tget x() {\n\t\t\t\t\tlet val;\n\t\t\t\t\tif (!_this.body) val = _this._vel.x;\n\t\t\t\t\telse val = _this.body.getLinearVelocity().x;\n\t\t\t\t\treturn fixRound(val / _this.tileSize);\n\t\t\t\t},\n\t\t\t\tset x(val) {\n\t\t\t\t\tval *= _this.tileSize;\n\t\t\t\t\tif (_this.body) {\n\t\t\t\t\t\t_this.body.setLinearVelocity(new pl.Vec2(val, _this.body.getLinearVelocity().y));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this._vel.x = val;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\tlet val;\n\t\t\t\t\tif (!_this.body) val = _this._vel.y;\n\t\t\t\t\telse val = _this.body.getLinearVelocity().y;\n\t\t\t\t\treturn fixRound(val / _this.tileSize);\n\t\t\t\t},\n\t\t\t\tset y(val) {\n\t\t\t\t\tval *= _this.tileSize;\n\t\t\t\t\tif (_this.body) {\n\t\t\t\t\t\t_this.body.setLinearVelocity(new pl.Vec2(_this.body.getLinearVelocity().x, val));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this._vel.y = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Verbose/legacy version of sprite.vel\n\t\t\t *\n\t\t\t * @property velocity\n\t\t\t */\n\t\t\tthis.velocity = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn _this.vel.x;\n\t\t\t\t},\n\t\t\t\tset x(val) {\n\t\t\t\t\t_this.vel.x = val;\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn _this.vel.y;\n\t\t\t\t},\n\t\t\t\tset y(val) {\n\t\t\t\t\t_this.vel.y = val;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._mirror = {\n\t\t\t\tx: 1,\n\t\t\t\ty: 1\n\t\t\t};\n\n\t\t\tthis.mirror = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn _this._mirror.x < 0;\n\t\t\t\t},\n\t\t\t\tset x(val) {\n\t\t\t\t\t_this._mirror.x = val ? -1 : 1;\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn _this._mirror.y < 0;\n\t\t\t\t},\n\t\t\t\tset y(val) {\n\t\t\t\t\t_this._mirror.y = val ? -1 : 1;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (ani) {\n\t\t\t\tif (ani instanceof p5.Image) {\n\t\t\t\t\tthis.addAni(ani);\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof ani == 'string') this._changeAni(ani);\n\t\t\t\t\telse this._animation = ani.clone();\n\t\t\t\t}\n\t\t\t\tlet ts = this.tileSize;\n\t\t\t\tif (!w && this.ani.w != 1) {\n\t\t\t\t\tw = this.ani.w / ts;\n\t\t\t\t\tif (this.shape != 'circle' && this.ani.h > 1) {\n\t\t\t\t\t\th = this.ani.h / ts;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.layer = group.layer;\n\t\t\tthis.layer ??= this.p.allSprites.maxDepth() + 1;\n\t\t\tcollider ??= group.collider;\n\n\t\t\tif (!collider || typeof collider != 'string') {\n\t\t\t\tcollider = 'dynamic';\n\t\t\t}\n\n\t\t\tx ??= group.x;\n\t\t\tif (x === undefined) {\n\t\t\t\tx = this.p.width / this.p.allSprites.tileSize / 2;\n\t\t\t\tthis._vertexMode = true;\n\t\t\t}\n\t\t\ty ??= group.y;\n\t\t\tif (y === undefined) y = this.p.height / this.p.allSprites.tileSize / 2;\n\t\t\tw ??= group.w || group.width || group.diameter;\n\t\t\th ??= group.h || group.height;\n\n\t\t\tif (typeof x == 'function') x = x(group.length - 1);\n\t\t\tif (typeof y == 'function') y = y(group.length - 1);\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\tthis.mouse = new SpriteMouse();\n\n\t\t\tif (collider != 'none' && collider != 'n') {\n\t\t\t\tthis._collider = collider;\n\t\t\t\tthis.addCollider(0, 0, w, h);\n\t\t\t} else {\n\t\t\t\tthis.w = w || (this.tileSize > 1 ? 1 : 50);\n\t\t\t\tthis.h = h;\n\t\t\t\tif (h === undefined) this._shape = 'circle';\n\t\t\t\telse this._shape = 'box';\n\t\t\t}\n\n\t\t\tthis._scale = 1;\n\t\t\tthis.previousPosition = { x, y };\n\t\t\tthis.dest = { x, y };\n\t\t\tthis._destIdx = 0;\n\t\t\tthis.drag = 0;\n\t\t\tthis.debug = false;\n\t\t\tthis._shift = {};\n\n\t\t\tlet gvx = group.vel.x || 0;\n\t\t\tlet gvy = group.vel.y || 0;\n\t\t\tif (typeof gvx == 'function') gvx = gvx(group.length - 1);\n\t\t\tif (typeof gvy == 'function') gvy = gvy(group.length - 1);\n\t\t\tthis.vel.x = gvx;\n\t\t\tthis.vel.y = gvy;\n\n\t\t\tfor (let prop of spriteProps) {\n\t\t\t\tif (prop == 'collider' || prop == 'x' || prop == 'y') continue;\n\t\t\t\tlet val = group[prop];\n\t\t\t\tif (val === undefined) continue;\n\t\t\t\tif (typeof val == 'function') val = val(group.length - 1);\n\t\t\t\tif (typeof val == 'object') {\n\t\t\t\t\tthis[prop] = Object.assign({}, val);\n\t\t\t\t} else {\n\t\t\t\t\tthis[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// custom group properties \"sprite group traits\"\n\t\t\t// that are non-default sprite properties\n\t\t\tfor (let g of this.groups) {\n\t\t\t\tlet traits = {};\n\t\t\t\tlet props = Object.keys(g);\n\t\t\t\tfor (let prop of props) {\n\t\t\t\t\tif (!isNaN(prop) || prop[0] == '_') continue;\n\t\t\t\t\ttraits[prop] = null;\n\t\t\t\t}\n\n\t\t\t\t// delete these traits\n\t\t\t\tlet deletes = [\n\t\t\t\t\t'collider',\n\t\t\t\t\t'idNum',\n\t\t\t\t\t'p',\n\t\t\t\t\t'parent',\n\t\t\t\t\t'length',\n\t\t\t\t\t'_collides',\n\t\t\t\t\t'_colliding',\n\t\t\t\t\t'_collided',\n\t\t\t\t\t'_collisions',\n\t\t\t\t\t'_overlap',\n\t\t\t\t\t'_overlaps',\n\t\t\t\t\t'_overlapping',\n\t\t\t\t\t'_overlapped',\n\t\t\t\t\t'_overlappers',\n\t\t\t\t\t'animation',\n\t\t\t\t\t'animations',\n\t\t\t\t\t'autoCull',\n\t\t\t\t\t'Sprite',\n\t\t\t\t\t'Group',\n\t\t\t\t\t'vel',\n\t\t\t\t\t'mirror',\n\t\t\t\t\t'mouse'\n\t\t\t\t];\n\t\t\t\tfor (let d of deletes) {\n\t\t\t\t\tdelete traits[d];\n\t\t\t\t}\n\n\t\t\t\tfor (let prop in traits) {\n\t\t\t\t\tlet val = g[prop];\n\t\t\t\t\tif (val === undefined) continue;\n\t\t\t\t\tif (typeof val == 'function') {\n\t\t\t\t\t\tif (isArrowFunction(val)) val = val();\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof val == 'object') {\n\t\t\t\t\t\tthis[prop] = Object.assign({}, val);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis[prop] = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * If no image or animations are set this is color of the\n\t\t\t * placeholder rectangle\n\t\t\t *\n\t\t\t * @property color\n\t\t\t * @type {color}\n\t\t\t * @default a randomly generated color\n\t\t\t */\n\t\t\tthis.color ??= this.p.color(this.p.random(30, 245), this.p.random(30, 245), this.p.random(30, 245));\n\n\t\t\tthis.textColor ??= this.p.color(0);\n\n\t\t\tlet shouldCreateSensor = false;\n\t\t\tfor (let g of this.groups) {\n\t\t\t\tif (g._hasOverlaps) {\n\t\t\t\t\tshouldCreateSensor = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (shouldCreateSensor && !this._hasOverlaps) this._createSensors();\n\t\t}\n\n\t\t/**\n\t\t * Similar to createSprite and the Sprite constructor except\n\t\t * offset is the distance the collider is from the center of the\n\t\t * sprite.\n\t\t *\n\t\t * @param {Number} offsetX distance from the center of the sprite\n\t\t * @param {Number} offsetY distance from the center of the sprite\n\t\t */\n\t\taddCollider(offsetX, offsetY, w, h) {\n\t\t\tlet path, shape;\n\n\t\t\toffsetX ??= 0;\n\t\t\toffsetY ??= 0;\n\t\t\tw ??= this._w;\n\t\t\th ??= this._h;\n\n\t\t\tif (Array.isArray(w)) {\n\t\t\t\tpath = w;\n\t\t\t} else {\n\t\t\t\tif (w !== undefined && h === undefined) shape ??= 'circle';\n\t\t\t\tshape ??= 'box';\n\t\t\t}\n\n\t\t\tif (shape == 'box' || shape == 'circle') {\n\t\t\t\tw ??= this.tileSize > 1 ? 1 : 50;\n\t\t\t\th ??= w;\n\t\t\t}\n\n\t\t\tlet props = {};\n\n\t\t\tlet dimensions;\n\n\t\t\t// the actual dimensions of the collider for a box or circle are a\n\t\t\t// little bit smaller so that they can slid past each other\n\t\t\t// when in a tile grid\n\t\t\tif (shape == 'box' || shape == 'circle') {\n\t\t\t\tdimensions = scaleTo({ x: w - 0.08, y: h - 0.08 }, this.tileSize);\n\t\t\t}\n\n\t\t\tlet s;\n\t\t\tif (shape == 'box') {\n\t\t\t\ts = pl.Box(dimensions.x / 2, dimensions.y / 2, scaleTo({ x: offsetX, y: offsetY }, this.tileSize), 0);\n\t\t\t} else if (shape == 'circle') {\n\t\t\t\ts = pl.Circle(dimensions.x / 2);\n\t\t\t\ts.m_p.x = 0;\n\t\t\t\ts.m_p.y = 0;\n\t\t\t} else if (path) {\n\t\t\t\tlet vecs = [{ x: 0, y: 0 }];\n\t\t\t\tlet vert = { x: 0, y: 0 };\n\t\t\t\tlet min = { x: 0, y: 0 };\n\t\t\t\tlet max = { x: 0, y: 0 };\n\n\t\t\t\t// if the path is an array of position arrays\n\t\t\t\tlet usesVertices = Array.isArray(path[0]);\n\n\t\t\t\tfunction checkVert() {\n\t\t\t\t\tif (vert.x < min.x) min.x = vert.x;\n\t\t\t\t\tif (vert.y < min.y) min.y = vert.y;\n\t\t\t\t\tif (vert.x > max.x) max.x = vert.x;\n\t\t\t\t\tif (vert.y > max.y) max.y = vert.y;\n\t\t\t\t}\n\n\t\t\t\tif (usesVertices) {\n\t\t\t\t\tif (this._vertexMode) {\n\t\t\t\t\t\tthis.x = path[0][0];\n\t\t\t\t\t\tthis.y = path[0][1];\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < path.length; i++) {\n\t\t\t\t\t\tif (this._vertexMode) {\n\t\t\t\t\t\t\tif (i == 0) continue;\n\t\t\t\t\t\t\tvert.x = path[i][0] - this.x;\n\t\t\t\t\t\t\tvert.y = path[i][1] - this.y;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvert.x += path[i][0];\n\t\t\t\t\t\t\tvert.y += path[i][1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvecs.push({ x: vert.x, y: vert.y });\n\t\t\t\t\t\tcheckVert();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet rep = 1;\n\t\t\t\t\tif (path.length % 2) rep = path[path.length - 1];\n\t\t\t\t\tlet mod = rep > 0 ? 1 : -1;\n\t\t\t\t\trep = Math.abs(rep);\n\t\t\t\t\tlet ang = 0;\n\t\t\t\t\tfor (let i = 0; i < rep; i++) {\n\t\t\t\t\t\tfor (let j = 0; j < path.length - 1; j += 2) {\n\t\t\t\t\t\t\tlet len = path[j];\n\t\t\t\t\t\t\tang += path[j + 1];\n\t\t\t\t\t\t\tvert.x += len * this.p.cos(ang);\n\t\t\t\t\t\t\tvert.y += len * this.p.sin(ang);\n\t\t\t\t\t\t\tvecs.push({ x: vert.x, y: vert.y });\n\n\t\t\t\t\t\t\tcheckVert();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tang *= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tMath.round(vert.x * 1e6) / 1e6 == 0 &&\n\t\t\t\t\tMath.round(vert.y * 1e6) / 1e6 == 0 &&\n\t\t\t\t\tvecs.length - 1 <= pl.Settings.maxPolygonVertices &&\n\t\t\t\t\tthis._shape != 'chain'\n\t\t\t\t) {\n\t\t\t\t\tshape = 'polygon';\n\t\t\t\t} else {\n\t\t\t\t\tshape = 'chain';\n\t\t\t\t}\n\t\t\t\tw = max.x - min.x;\n\t\t\t\tthis._hw = w * 0.5;\n\t\t\t\th = max.y - min.y;\n\t\t\t\tthis._hh = h * 0.5;\n\n\t\t\t\tif (this.originMode == 'center') {\n\t\t\t\t\tfor (let i = 0; i < vecs.length; i++) {\n\t\t\t\t\t\tlet vec = vecs[i];\n\t\t\t\t\t\tvecs[i] = new pl.Vec2(\n\t\t\t\t\t\t\t((vec.x - this._hw - min.x) * this.tileSize) / plScale,\n\t\t\t\t\t\t\t((vec.y - this._hh - min.y) * this.tileSize) / plScale\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// origin is start\n\t\t\t\t\tfor (let i = 0; i < vecs.length; i++) {\n\t\t\t\t\t\tlet vec = vecs[i];\n\t\t\t\t\t\tvecs[i] = new pl.Vec2((vec.x * this.tileSize) / plScale, (vec.y * this.tileSize) / plScale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (shape == 'polygon') {\n\t\t\t\t\tif (this._isConvexPoly(vecs.slice(0, -1))) {\n\t\t\t\t\t\ts = pl.Polygon(vecs);\n\t\t\t\t\t} else shape = 'chain';\n\t\t\t\t}\n\t\t\t\tif (shape == 'chain') {\n\t\t\t\t\ts = pl.Chain(vecs, false);\n\t\t\t\t\tprops.density = 0;\n\t\t\t\t\tprops.restitution = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprops.shape = s;\n\t\t\tprops.density ??= this.density || 5;\n\t\t\tprops.friction ??= this.friction || 0.5;\n\t\t\tprops.restitution ??= this.bounciness || 0.2;\n\n\t\t\tif (!this.body) {\n\t\t\t\tthis.body = this.p.world.createBody({\n\t\t\t\t\tposition: scaleTo({ x: this.x, y: this.y }, this.tileSize),\n\t\t\t\t\ttype: this.collider\n\t\t\t\t});\n\t\t\t\tthis.body.sprite = this;\n\t\t\t}\n\t\t\tthis.body.createFixture(props);\n\t\t\tif (!this._shape) {\n\t\t\t\tthis._shape = shape;\n\t\t\t} else if (this.fixture.getNext()) {\n\t\t\t\tthis._shape = 'combo';\n\t\t\t}\n\t\t\tif (shape == 'circle') this._diameter = w;\n\t\t\telse {\n\t\t\t\tthis._h = h;\n\t\t\t\tthis._hh = h * 0.5;\n\t\t\t}\n\n\t\t\tthis._w = w;\n\t\t\tthis._hw = w * 0.5;\n\t\t}\n\n\t\t/**\n\t\t * Removes the physics body colliders from the sprite but not\n\t\t * overlap sensors.\n\t\t *\n\t\t * @method removeColliders\n\t\t */\n\t\tremoveColliders() {\n\t\t\tthis._collides = {};\n\t\t\tthis._colliding = {};\n\t\t\tthis._collided = {};\n\t\t\tthis._removeFixtures(false);\n\t\t}\n\n\t\t/**\n\t\t * Removes overlap sensors from the sprite.\n\t\t *\n\t\t * @method removeSensors\n\t\t */\n\t\tremoveSensors() {\n\t\t\tthis._overlap = {};\n\t\t\tthis._overlaps = {};\n\t\t\tthis._overlapping = {};\n\t\t\tthis._overlapped = {};\n\t\t\tthis._removeFixtures(true);\n\t\t}\n\n\t\t// removes sensors or colliders\n\t\t_removeFixtures(isSensor) {\n\t\t\tlet prevFxt;\n\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\tif (fxt.m_isSensor == isSensor) {\n\t\t\t\t\tlet _fxt = fxt.m_next;\n\t\t\t\t\tfxt.destroyProxies(this.p.world.m_broadPhase);\n\t\t\t\t\tif (!prevFxt) {\n\t\t\t\t\t\tthis.body.m_fixtureList = _fxt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevFxt.m_next = _fxt;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprevFxt = fxt;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Clones the collider's props to be transferred to a new collider.\n\t\t * @private\n\t\t */\n\t\t_cloneBodyProps() {\n\t\t\tlet body = {};\n\t\t\tlet props = [...spriteProps];\n\t\t\tlet deletes = [\n\t\t\t\t'w',\n\t\t\t\t'h',\n\t\t\t\t'width',\n\t\t\t\t'height',\n\t\t\t\t'shape',\n\t\t\t\t'd',\n\t\t\t\t'diameter',\n\t\t\t\t'dynamic',\n\t\t\t\t'static',\n\t\t\t\t'kinematic',\n\t\t\t\t'collider'\n\t\t\t];\n\t\t\tfor (let del of deletes) {\n\t\t\t\tlet i = props.indexOf(del);\n\t\t\t\tif (i >= 0) props.splice(i, 1);\n\t\t\t}\n\t\t\tfor (let prop of props) {\n\t\t\t\tbody[prop] = this[prop];\n\t\t\t}\n\t\t\treturn body;\n\t\t}\n\n\t\t// get aabb() {\n\t\t// \treturn getAABB(this);\n\t\t// }\n\n\t\t// set advance(val) {\n\t\t// \tthis.body.advance(val);\n\t\t// }\n\t\t// set angularImpulse(val) {\n\t\t// \tthis.body.applyAngularImpulse(val, true);\n\t\t// }\n\n\t\t/**\n\t\t * This property disables the ability for a sprite to \"sleep\".\n\t\t *\n\t\t * \"Sleeping\" sprites are not included in the physics simulation, a\n\t\t * sprite starts \"sleeping\" when it stops moving and doesn't collide\n\t\t * with anything that it wasn't already _touching.\n\t\t *\n\t\t * @property {Boolean} allowSleeping\n\t\t * @default true\n\t\t */\n\t\tget allowSleeping() {\n\t\t\treturn this.body.getSleepingAllowed();\n\t\t}\n\n\t\tset allowSleeping(val) {\n\t\t\tthis.body.setSleepingAllowed(val);\n\t\t}\n\n\t\t/**\n\t\t * Reference to the sprite's current animation.\n\t\t *\n\t\t * @property animation\n\t\t * @type {SpriteAnimation}\n\t\t */\n\t\tget animation() {\n\t\t\treturn this._animation;\n\t\t}\n\n\t\tset animation(val) {\n\t\t\tthis.changeAni(val);\n\t\t}\n\n\t\tget ani() {\n\t\t\treturn this._animation;\n\t\t}\n\n\t\tset ani(val) {\n\t\t\tthis.changeAni(val);\n\t\t}\n\n\t\tget anis() {\n\t\t\treturn this.animations;\n\t\t}\n\n\t\t/**\n\t\t * The bounciness of the sprite's physics body.\n\t\t *\n\t\t * @property bounciness\n\t\t * @type {Number}\n\t\t */\n\t\tget bounciness() {\n\t\t\tif (!this.fixture) return;\n\t\t\treturn this.fixture.getRestitution();\n\t\t}\n\t\tset bounciness(val) {\n\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\tfxt.setRestitution(val);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * The center of mass of the sprite's physics body.\n\t\t *\n\t\t * @property centerOfMass\n\t\t * @type {Number}\n\t\t */\n\t\tget centerOfMass() {\n\t\t\treturn scaleFrom(this.body.getWorldCenter(), this.tileSize);\n\t\t}\n\n\t\tget collider() {\n\t\t\treturn this._collider;\n\t\t}\n\n\t\tset collider(val) {\n\t\t\tif (this._collider == val) return;\n\t\t\tthis._collider = val;\n\t\t\tthis._reset();\n\t\t}\n\n\t\t_reset() {\n\t\t\tlet bodyProps;\n\t\t\tif (this._collider != 'none') {\n\t\t\t\tbodyProps = this._cloneBodyProps();\n\t\t\t}\n\n\t\t\tlet v;\n\t\t\tif (this._shape == 'chain' || this._shape == 'polygon') {\n\t\t\t\tv = this._getVertices(true);\n\t\t\t\tthis._vertexMode = true;\n\t\t\t}\n\n\t\t\t// remove body\n\t\t\tif (this.body) {\n\t\t\t\tthis.p.world.destroyBody(this.body);\n\t\t\t\tthis.body = undefined;\n\t\t\t}\n\n\t\t\t// replace colliders and overlap sensors\n\t\t\tif (this._collider != 'none') {\n\t\t\t\tif (v) {\n\t\t\t\t\tthis.addCollider(0, 0, v);\n\t\t\t\t} else {\n\t\t\t\t\tthis.addCollider();\n\t\t\t\t}\n\t\t\t\tif (this._hasOverlaps) {\n\t\t\t\t\tthis._createSensors();\n\t\t\t\t}\n\t\t\t\tfor (let prop in bodyProps) {\n\t\t\t\t\tthis[prop] = bodyProps[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * The sprite's current color. By default sprites get a random color.\n\t\t *\n\t\t * @property color\n\t\t * @type {p5.Color}\n\t\t */\n\t\tget color() {\n\t\t\treturn this._color;\n\t\t}\n\n\t\tset color(val) {\n\t\t\tif (val instanceof p5.Color) {\n\t\t\t\tthis._color = val;\n\t\t\t} else if (typeof val != 'object') {\n\t\t\t\tthis._color = this.p.color(val);\n\t\t\t} else {\n\t\t\t\tthis._color = this.p.color(...val.levels);\n\t\t\t}\n\t\t}\n\n\t\tget shapeColor() {\n\t\t\treturn this._color;\n\t\t}\n\n\t\tset shapeColor(val) {\n\t\t\tthis.color = val;\n\t\t}\n\n\t\t/**\n\t\t * The density of the sprite's physics body.\n\t\t *\n\t\t * @property density\n\t\t * @type {Number}\n\t\t */\n\t\tget density() {\n\t\t\tif (!this.fixture) return;\n\t\t\treturn this.fixture.getDensity();\n\t\t}\n\t\tset density(val) {\n\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\tfxt.setDensity(val);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Use .layer instead.\n\t\t *\n\t\t * @deprecated\n\t\t * @property depth\n\t\t */\n\t\tget depth() {\n\t\t\treturn this.layer;\n\t\t}\n\t\tset depth(val) {\n\t\t\tthis.layer = val;\n\t\t}\n\n\t\t/**\n\t\t * The angle of the sprite's movement or it's rotation angle if the\n\t\t * sprite is not moving.\n\t\t *\n\t\t * @property direction\n\t\t * @type {Number}\n\t\t */\n\t\tget direction() {\n\t\t\tif (this.body && (this.vel.x !== 0 || this.vel.y !== 0)) {\n\t\t\t\treturn this.p.atan2(this.vel.y, this.vel.x);\n\t\t\t}\n\t\t\tif (!this._direction) return this.rotation;\n\t\t\treturn this._direction;\n\t\t}\n\t\tset direction(val) {\n\t\t\tthis._direction = val;\n\t\t\tlet speed = this.speed;\n\t\t\tthis.vel.x = this.p.cos(val) * speed;\n\t\t\tthis.vel.y = this.p.sin(val) * speed;\n\t\t}\n\n\t\t/**\n\t\t * The amount of resistance a sprite has to being moved.\n\t\t *\n\t\t * @property drag\n\t\t * @type {Number}\n\t\t */\n\t\tget drag() {\n\t\t\tif (this.body) return this.body.getLinearDamping();\n\t\t\telse return Infinity;\n\t\t}\n\t\tset drag(val) {\n\t\t\tif (this.body) this.body.setLinearDamping(val);\n\t\t}\n\n\t\t/**\n\t\t * Manages the visuals of the sprite. It can be overridden with a\n\t\t * custom drawing function in which the center of the sprite is\n\t\t * at (0, 0).\n\t\t *\n\t\t * @example\n\t\t * sprite.draw = function() {\n\t\t *   // an oval\n\t\t *   ellipse(0,0,20,10);\n\t\t * }\n\t\t *\n\t\t * @method draw\n\t\t */\n\t\tget draw() {\n\t\t\treturn this._display;\n\t\t}\n\n\t\tset draw(val) {\n\t\t\tthis._draw = val;\n\t\t}\n\n\t\t/**\n\t\t * True if the sprite's physics body is dynamic.\n\t\t *\n\t\t * @property dynamic\n\t\t * @type {Boolean}\n\t\t */\n\t\tget dynamic() {\n\t\t\treturn this.body.isDynamic();\n\t\t}\n\t\tset dynamic(val) {\n\t\t\tif (val) this.collider = 'dynamic';\n\t\t}\n\n\t\t/**\n\t\t * If true the sprite can not rotate.\n\t\t *\n\t\t * @property rotationLock\n\t\t * @type {Boolean}\n\t\t */\n\t\tget rotationLock() {\n\t\t\treturn this.body.isFixedRotation();\n\t\t}\n\t\tset rotationLock(val) {\n\t\t\tthis.body.setFixedRotation(val);\n\t\t}\n\n\t\t/**\n\t\t * Returns the first node in a linked list of the planck physics\n\t\t * body's fixtures.\n\t\t *\n\t\t * @private\n\t\t * @property fixture\n\t\t */\n\t\tget fixture() {\n\t\t\treturn this.fixtureList;\n\t\t}\n\t\t/**\n\t\t * Returns the first node in a linked list of the planck physics\n\t\t * body's fixtures.\n\t\t *\n\t\t * @private\n\t\t * @property fixtureList\n\t\t */\n\t\tget fixtureList() {\n\t\t\tif (!this.body) return null;\n\t\t\treturn this.body.getFixtureList();\n\t\t}\n\n\t\t// set force(val) {\n\t\t// \tthis.body.applyForceToCenter(val, true);\n\t\t// }\n\n\t\t/**\n\t\t * The amount the sprite's physics body resists moving\n\t\t * when rubbing against another physics body.\n\t\t *\n\t\t * @property friction\n\t\t * @type {Number}\n\t\t */\n\t\tget friction() {\n\t\t\tif (!this.fixture) return;\n\t\t\treturn this.fixture.getFriction();\n\t\t}\n\t\tset friction(val) {\n\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\tfxt.setFriction(val);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Use .static instead.\n\t\t *\n\t\t * @deprecated\n\t\t * @property immovable\n\t\t */\n\t\tget immovable() {\n\t\t\treturn this.body.isStatic();\n\t\t}\n\t\tset immovable(val) {\n\t\t\tif (val) this.body.setStatic();\n\t\t}\n\t\t// set impulse(val) {\n\t\t// \tthis.body.applyLinearImpulse(val, this.body.getWorldCenter(), true);\n\t\t// }\n\t\t// get inertia() {\n\t\t// \treturn this.body.getInertia();\n\t\t// }\n\n\t\tget img() {\n\t\t\treturn this._animation;\n\t\t}\n\n\t\tset img(val) {\n\t\t\tthis.changeAni(val);\n\t\t}\n\n\t\tget isMoving() {\n\t\t\treturn this.vel.x != 0 || this.vel.y != 0;\n\t\t}\n\n\t\t/**\n\t\t * Set this to true if the sprite goes really fast to prevent\n\t\t * inaccurate physics simulation.\n\t\t *\n\t\t * @property isSuperFast\n\t\t * @type {Boolean}\n\t\t */\n\t\tget isSuperFast() {\n\t\t\treturn this.body.isBullet();\n\t\t}\n\t\tset isSuperFast(val) {\n\t\t\tthis.body.setBullet(val);\n\t\t}\n\n\t\t// get joint() {\n\t\t// \treturn this.body.getJointList().joint;\n\t\t// }\n\t\t// get jointList() {\n\t\t// \treturn this.body.getJointList();\n\t\t// }\n\n\t\t/**\n\t\t * True if the sprite's physics body is kinematic.\n\t\t *\n\t\t * @property kinematic\n\t\t * @type {Boolean}\n\t\t */\n\t\tget kinematic() {\n\t\t\treturn this.body.isKinematic();\n\t\t}\n\t\tset kinematic(val) {\n\t\t\tif (val) this.collider = 'kinematic';\n\t\t}\n\t\t/**\n\t\t * The mass of the sprite's physics body.\n\t\t *\n\t\t * @property mass\n\t\t * @type {Number}\n\t\t */\n\t\tget mass() {\n\t\t\treturn this.body.getMass();\n\t\t}\n\t\tset mass(val) {\n\t\t\tlet t = this.massData;\n\t\t\tt.mass = val;\n\t\t\tthis.body.setMassData(t);\n\t\t}\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tget massData() {\n\t\t\tconst t = { I: 0, center: new pl.Vec2(0, 0), mass: 0 };\n\t\t\tthis.body.getMassData(t);\n\t\t\tt.center = scaleFrom(t.center, this.tileSize);\n\t\t\treturn t;\n\t\t}\n\t\t// set massData(val) {\n\t\t// \tval.center = scaleTo(val.center);\n\t\t// \tthis.body.setMassData(val);\n\t\t// }\n\n\t\t// get next() {\n\t\t// \treturn this.body.getNext();\n\t\t// }\n\n\t\t/**\n\t\t * The angle of the sprite's rotation, not the direction it is moving.\n\t\t *\n\t\t * @property rotation\n\t\t * @type {Number}\n\t\t */\n\t\tget rotation() {\n\t\t\tif (!this.body) return this._angle || 0;\n\t\t\tif (this.p._angleMode === p5.prototype.DEGREES) {\n\t\t\t\treturn p5.prototype.degrees(this.body.getAngle());\n\t\t\t}\n\t\t\treturn this.body.getAngle();\n\t\t}\n\t\tset rotation(val) {\n\t\t\tif (this.body) {\n\t\t\t\tif (this.p._angleMode === p5.prototype.DEGREES) {\n\t\t\t\t\tthis.body.setAngle(p5.prototype.radians(val));\n\t\t\t\t} else {\n\t\t\t\t\tthis.body.setAngle(val);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._angle = val;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * The amount of the sprite resists rotating.\n\t\t *\n\t\t * @property rotationDrag\n\t\t * @type {Number}\n\t\t */\n\t\tget rotationDrag() {\n\t\t\treturn this.body.getAngularDamping();\n\t\t}\n\t\tset rotationDrag(val) {\n\t\t\tthis.body.setAngularDamping(val);\n\t\t}\n\t\t/**\n\t\t * The speed of the sprite's rotation.\n\t\t *\n\t\t * @property rotationSpeed\n\t\t * @type {Number}\n\t\t */\n\t\tget rotationSpeed() {\n\t\t\tif (this.body) return this.body.getAngularVelocity();\n\t\t\treturn this._rotationSpeed || 0;\n\t\t}\n\t\tset rotationSpeed(val) {\n\t\t\tif (this.body) this.body.setAngularVelocity(val);\n\t\t\telse this._rotationSpeed = val;\n\t\t}\n\n\t\t/**\n\t\t * Scale of the sprite's physics body and appearance. Default is 1.\n\t\t *\n\t\t * @property scale\n\t\t * @type {Number}\n\t\t */\n\t\tget scale() {\n\t\t\treturn this._scale;\n\t\t}\n\n\t\tset scale(val) {\n\t\t\tif (val == 1) return;\n\t\t\tthis._w *= val;\n\t\t\tthis._hw *= val;\n\t\t\tif (this._h) {\n\t\t\t\tthis._h *= val;\n\t\t\t\tthis._hh *= val;\n\t\t\t}\n\t\t\tthis._resizeCollider(val);\n\t\t\tthis._scale = val;\n\t\t\tif (this.ani) {\n\t\t\t\tthis.ani.scale.x = val;\n\t\t\t\tthis.ani.scale.y = val;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Wake a sprite up or put it to sleep.\n\t\t *\n\t\t * \"Sleeping\" sprites are not included in the physics simulation, a\n\t\t * sprite starts \"sleeping\" when it stops moving and doesn't collide\n\t\t * with anything that it wasn't already _touching.\n\t\t *\n\t\t * @property {Boolean} isAwake\n\t\t * @default true\n\t\t */\n\t\tget sleeping() {\n\t\t\treturn this.body.isAwake();\n\t\t}\n\n\t\tset sleeping(val) {\n\t\t\treturn this.body.setAwake(!val);\n\t\t}\n\n\t\t/**\n\t\t * The sprite's speed.\n\t\t *\n\t\t * @property speed\n\t\t * @type {Number}\n\t\t */\n\t\tget speed() {\n\t\t\treturn this.p.createVector(this.vel.x, this.vel.y).mag();\n\t\t}\n\n\t\t/**\n\t\t * @deprecated\n\t\t */\n\t\tgetSpeed() {\n\t\t\treturn this.speed;\n\t\t}\n\t\t/**\n\t\t * The sprite's speed.\n\t\t *\n\t\t * @property speed\n\t\t * @type {Number}\n\t\t * @param {Number} speed that the sprite will move at in the direction of its current rotation\n\t\t */\n\t\tset speed(val) {\n\t\t\tlet angle = this.direction;\n\t\t\tthis.vel.x = this.p.cos(angle) * val;\n\t\t\tthis.vel.y = this.p.sin(angle) * val;\n\t\t}\n\n\t\t/**\n\t\t * Is the sprite's physics collider static?\n\t\t *\n\t\t * @property static\n\t\t * @type {Boolean}\n\t\t */\n\t\tget static() {\n\t\t\treturn this.body.isStatic();\n\t\t}\n\t\tset static(val) {\n\t\t\tif (val) this.collider = 'static';\n\t\t}\n\n\t\t/**\n\t\t * Apply a torque on the sprite's physics body.\n\t\t * Torque is the force that causes rotation.\n\t\t * A positive torque will rotate the sprite clockwise.\n\t\t * A negative torque will rotate the sprite counter-clockwise.\n\t\t *\n\t\t * @property torque\n\t\t * @param {Number} torque The amount of torque to apply.\n\t\t */\n\t\tset torque(val) {\n\t\t\tthis.body.applyTorque(val, true);\n\t\t}\n\n\t\t/**\n\t\t * The sprite's vertices.\n\t\t *\n\t\t * @property vertices\n\t\t * @type {Array} An array of p5.Vector objects.\n\t\t */\n\t\tget vertices() {\n\t\t\treturn this._getVertices();\n\t\t}\n\n\t\t_getVertices(output2DArrays) {\n\t\t\tlet s = this.body.getFixtureList().getShape();\n\t\t\tlet v = [...s.m_vertices];\n\t\t\tif (s.m_type == 'polygon') v.unshift(v.at(-1));\n\t\t\tlet x = this.x;\n\t\t\tlet y = this.y;\n\t\t\tif (this.originMode == 'center') {\n\t\t\t\tlet minX = Math.min(...v.map((v) => v.x));\n\t\t\t\tlet minY = Math.min(...v.map((v) => v.y));\n\t\t\t\tx = this._hw + minX;\n\t\t\t\ty = this._hh + minY;\n\t\t\t}\n\t\t\tfor (let i = 0; i < v.length; i++) {\n\t\t\t\tlet arr = [v[i].x * plScale + x, v[i].y * plScale + y];\n\t\t\t\tif (output2DArrays) v[i] = arr;\n\t\t\t\telse v[i] = pInst.createVector(arr[0], arr[1]);\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\n\t\t// TODO set vertices\n\n\t\t/**\n\t\t * The horizontal position of the sprite.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t */\n\t\tget x() {\n\t\t\tif (!this.body) return this._pos.x;\n\t\t\tlet x = (this.body.getPosition().x / this.tileSize) * plScale;\n\t\t\treturn fixRound(x);\n\t\t}\n\t\tset x(val) {\n\t\t\tif (this.body) {\n\t\t\t\tlet pos = new pl.Vec2((val * this.tileSize) / plScale, this.body.getPosition().y);\n\t\t\t\tthis.body.setPosition(pos);\n\t\t\t}\n\t\t\tthis._pos.x = val;\n\t\t}\n\t\t/**\n\t\t * The vertical position of the sprite.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t */\n\t\tget y() {\n\t\t\tif (!this.body) return this._pos.y;\n\t\t\tlet y = (this.body.getPosition().y / this.tileSize) * plScale;\n\t\t\treturn fixRound(y);\n\t\t}\n\t\tset y(val) {\n\t\t\tif (this.body) {\n\t\t\t\tlet pos = new pl.Vec2(this.body.getPosition().x, (val * this.tileSize) / plScale);\n\t\t\t\tthis.body.setPosition(pos);\n\t\t\t}\n\t\t\tthis._pos.y = val;\n\t\t}\n\t\t/**\n\t\t * Set the position vector {x, y}\n\t\t *\n\t\t * @property pos\n\t\t * @type {Object}\n\t\t */\n\t\tset pos(val) {\n\t\t\tlet pos = new pl.Vec2((val.x * this.tileSize) / plScale, (val.y * this.tileSize) / plScale);\n\t\t\t_this.body.setPosition(pos);\n\t\t}\n\t\t/**\n\t\t * The width of the sprite.\n\t\t * @property w\n\t\t * @type {Number}\n\t\t */\n\t\tget w() {\n\t\t\treturn this._w;\n\t\t}\n\t\tset w(val) {\n\t\t\tif (val < 0) val = 0.01;\n\t\t\tif (val == this._w) return;\n\t\t\tlet scale = val / this._w;\n\t\t\tthis._w = val;\n\t\t\tthis._hw = val * 0.5;\n\t\t\tthis._resizeCollider({ x: scale });\n\t\t}\n\t\tget hw() {\n\t\t\treturn this._hw;\n\t\t}\n\t\tset hw(val) {\n\t\t\tthrow new Error(\"Unable to change the value of halfWidth directly, change the sprite's width instead\");\n\t\t}\n\t\t/**\n\t\t * The width of the sprite.\n\t\t * @property width\n\t\t * @type {Number}\n\t\t */\n\t\tget width() {\n\t\t\treturn this.w;\n\t\t}\n\t\tset width(val) {\n\t\t\tthis.w = val;\n\t\t}\n\t\tget halfWidth() {\n\t\t\treturn this.hw;\n\t\t}\n\t\tset halfWidth(val) {\n\t\t\tthrow new Error(\"Unable to change the value of halfWidth directly, change the sprite's width instead\");\n\t\t}\n\t\t/**\n\t\t * The height of the sprite.\n\t\t * @property h\n\t\t * @type {Number}\n\t\t */\n\t\tget h() {\n\t\t\tif (this.shape == 'circle') return this._w;\n\t\t\treturn this._h;\n\t\t}\n\t\tset h(val) {\n\t\t\tif (val < 0) val = 0.01;\n\t\t\tif (this.shape == 'circle') {\n\t\t\t\tthis.w = val;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (val == this._h) return;\n\t\t\tlet scale = val / this._h;\n\t\t\tthis._h = val;\n\t\t\tthis._hh = val * 0.5;\n\t\t\tthis._resizeCollider({ y: scale });\n\t\t}\n\t\tget hh() {\n\t\t\treturn this._hh;\n\t\t}\n\t\tset hh(val) {\n\t\t\tthrow new Error(\"Unable to change the value of halfHeight directly, change the sprite's height instead\");\n\t\t}\n\t\t/**\n\t\t * The height of the sprite.\n\t\t * @property height\n\t\t * @type {Number}\n\t\t */\n\t\tget height() {\n\t\t\treturn this.h;\n\t\t}\n\t\tset height(val) {\n\t\t\tthis.h = val;\n\t\t}\n\t\tget halfHeight() {\n\t\t\treturn this.hh;\n\t\t}\n\t\tset halfHeight(val) {\n\t\t\tthrow new Error(\"Unable to change the value of halfHeight directly, change the sprite's height instead\");\n\t\t}\n\t\t/**\n\t\t * The diameter of a circular sprite.\n\t\t * @property d\n\t\t * @type {Number}\n\t\t */\n\t\tget d() {\n\t\t\tthis._diameter ??= this.w;\n\t\t\treturn this._diameter;\n\t\t}\n\t\tset d(val) {\n\t\t\tif (val < 0) {\n\t\t\t\tthis.remove();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._diameter == val) return;\n\t\t\tthis._diameter = val;\n\n\t\t\tlet prevShape = this.shape;\n\t\t\tif (prevShape != 'circle') {\n\t\t\t\tlet bodyProps;\n\t\t\t\tif (this._collider == 'none') {\n\t\t\t\t\tbodyProps = this._cloneBodyProps();\n\t\t\t\t}\n\t\t\t\tthis.removeColliders();\n\t\t\t\tthis._h = undefined;\n\t\t\t\tthis._shape = undefined;\n\t\t\t\tif (this._collider != 'none') {\n\t\t\t\t\tthis.addCollider(0, 0, val);\n\t\t\t\t\tfor (let prop in bodyProps) {\n\t\t\t\t\t\tthis[prop] = bodyProps[prop];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._shape = 'circle';\n\t\t\t}\n\t\t\tlet scale = val / this._w;\n\t\t\tthis._w = val;\n\t\t\tthis._hw = val * 0.5;\n\t\t\tif (prevShape != 'circle') return;\n\t\t\tthis._resizeCollider(scale);\n\t\t}\n\t\t/**\n\t\t * The diameter of a circular sprite.\n\t\t * @property diameter\n\t\t * @type {Number}\n\t\t */\n\t\tget diameter() {\n\t\t\treturn this.d;\n\t\t}\n\t\tset diameter(val) {\n\t\t\tthis.d = val;\n\t\t}\n\n\t\tget r() {\n\t\t\treturn this._hw;\n\t\t}\n\n\t\tset r(val) {\n\t\t\tthrow new Error(\"Unable to change the value of radius directly, change the sprite's diameter instead\");\n\t\t}\n\n\t\tget radius() {\n\t\t\treturn this._hw;\n\t\t}\n\t\tset radius(val) {\n\t\t\tthrow new Error(\"Unable to change the value of radius directly, change the sprite's diameter instead\");\n\t\t}\n\n\t\t// TODO make this work for other shapes\n\t\t_resizeCollider(scale) {\n\t\t\tif (!this.body) return;\n\n\t\t\tif (typeof scale == 'number') {\n\t\t\t\tscale = { x: scale, y: scale };\n\t\t\t} else {\n\t\t\t\tif (!scale.x) scale.x = 1;\n\t\t\t\tif (!scale.y) scale.y = 1;\n\t\t\t}\n\t\t\tif (this.shape == 'circle') {\n\t\t\t\tlet fxt = this.fixture;\n\t\t\t\tlet sh = fxt.m_shape;\n\t\t\t\tsh.m_radius *= scale.x;\n\t\t\t} else {\n\t\t\t\t// let bodyProps = this._cloneBodyProps();\n\t\t\t\t// this.removeColliders();\n\t\t\t\t// this.addCollider();\n\t\t\t\t// for (let prop in bodyProps) {\n\t\t\t\t// \tthis[prop] = bodyProps[prop];\n\t\t\t\t// }\n\n\t\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\t\tif (fxt.m_isSensor) continue;\n\t\t\t\t\tlet sh = fxt.m_shape;\n\t\t\t\t\tfor (let vert of sh.m_vertices) {\n\t\t\t\t\t\tvert.x *= scale.x;\n\t\t\t\t\t\tvert.y *= scale.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Validate convexity.\n\t\t *\n\t\t * @private\n\t\t * @param vecs {Array} an array of planck.Vec2 vertices\n\t\t * @returns true if valid\n\t\t */\n\t\t_isConvexPoly(vecs) {\n\t\t\tloopk: for (let k = 0; k < 2; k++) {\n\t\t\t\tif (k == 1) vecs = vecs.reverse();\n\t\t\t\tfor (let i = 0; i < vecs.length; ++i) {\n\t\t\t\t\tconst i1 = i;\n\t\t\t\t\tconst i2 = i < vecs.length - 1 ? i1 + 1 : 0;\n\t\t\t\t\tconst p = vecs[i1];\n\t\t\t\t\tconst e = pl.Vec2.sub(vecs[i2], p);\n\n\t\t\t\t\tfor (let j = 0; j < vecs.length; ++j) {\n\t\t\t\t\t\tif (j == i1 || j == i2) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst v = pl.Vec2.sub(vecs[j], p);\n\t\t\t\t\t\tconst c = pl.Vec2.cross(e, v);\n\t\t\t\t\t\tif (c < 0.0) {\n\t\t\t\t\t\t\tif (k == 0) continue loopk;\n\t\t\t\t\t\t\telse return false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * The kind of shape: 'box', 'circle', 'chain', or 'polygon'.\n\t\t *\n\t\t * @property shape\n\t\t * @type {String}\n\t\t * @default box\n\t\t */\n\t\tget shape() {\n\t\t\treturn this._shape;\n\t\t}\n\n\t\tset shape(val) {\n\t\t\tif (this._shape == val) return;\n\t\t\tthis._shape = val;\n\t\t\tthis._reset();\n\t\t}\n\n\t\t/**\n\t\t * You can set the sprite's update function to your own custom\n\t\t * update function that will be run after every draw call or when\n\t\t * the updateSprites function is called.\n\t\t *\n\t\t * @method update\n\t\t */\n\t\tget update() {\n\t\t\treturn this._update;\n\t\t}\n\n\t\tset update(val) {\n\t\t\tthis._customUpdate = val;\n\t\t}\n\n\t\t/**\n\t\t * Updates the sprite. Called automatically at the end of the draw\n\t\t * cycle.\n\t\t *\n\t\t * @private\n\t\t */\n\t\t_update() {\n\t\t\tif (this.animation) this.animation.update();\n\n\t\t\tif (!this.body) {\n\t\t\t\tthis.rotation += this._rotationSpeed;\n\t\t\t\tthis.x += this.vel.x;\n\t\t\t\tthis.y += this.vel.y;\n\t\t\t}\n\n\t\t\tif (this.xLock) this.x = this.previousPosition.x;\n\t\t\tif (this.yLock) this.y = this.previousPosition.y;\n\n\t\t\tfor (let prop in this.mouse) {\n\t\t\t\tif (this.mouse[prop] == -1) this.mouse[prop] = 0;\n\t\t\t}\n\n\t\t\tlet a = this;\n\t\t\tfor (let event in eventTypes) {\n\t\t\t\tfor (let entry of this[event]) {\n\t\t\t\t\tlet contactType;\n\t\t\t\t\tlet b = entry[0];\n\t\t\t\t\tlet f = entry[1] + 1;\n\t\t\t\t\tthis[event].set(b, f);\n\t\t\t\t\tif (f == 0) {\n\t\t\t\t\t\tthis[event].delete(b);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (f == -1) {\n\t\t\t\t\t\tcontactType = eventTypes[event][2];\n\t\t\t\t\t} else if (f == 1) {\n\t\t\t\t\t\tcontactType = eventTypes[event][0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontactType = eventTypes[event][1];\n\t\t\t\t\t}\n\t\t\t\t\tif (b instanceof Group) continue;\n\n\t\t\t\t\tlet cb = _findContactCB(contactType, a, b);\n\t\t\t\t\tif (typeof cb == 'function') cb(a, b, f);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._customUpdate) this._customUpdate();\n\t\t}\n\n\t\t/**\n\t\t * Default draw\n\t\t *\n\t\t * @private\n\t\t */\n\t\t_draw() {\n\t\t\tif (this.animation && !this.debug) {\n\t\t\t\tthis.animation.draw(0, 0, undefined, this._scale, this._scale);\n\t\t\t} else if (this.fixture != null) {\n\t\t\t\tif (this._shape == 'chain') this.p.stroke(this.color);\n\t\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\t\tthis._drawFixture(fxt);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.p.stroke(120);\n\t\t\t\tif (this._shape == 'box') {\n\t\t\t\t\tthis.p.rect(0, 0, this.w, this.h);\n\t\t\t\t} else if (this._shape == 'circle') {\n\t\t\t\t\tthis.p.circle(0, 0, this.d);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.text) {\n\t\t\t\tthis.p.textAlign(this.p.CENTER, this.p.CENTER);\n\t\t\t\tthis.p.fill(this.textColor);\n\t\t\t\tthis.p.textSize(this.textSize);\n\t\t\t\tthis.p.text(this.text, 0, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Displays the Sprite with rotation and scaling applied before\n\t\t * the sprite's draw function is called.\n\t\t *\n\t\t * @private\n\t\t */\n\t\t_display() {\n\t\t\tlet x = this.p.width * 0.5 - this.p.world.origin.x + this.x * this.tileSize;\n\t\t\tlet y = this.p.height * 0.5 - this.p.world.origin.y + this.y * this.tileSize;\n\n\t\t\t// skip drawing for out-of-view bodies, but\n\t\t\t// edges can be very long, so they still should be drawn\n\t\t\tif (\n\t\t\t\tthis.shape != 'chain' &&\n\t\t\t\tthis.p.camera.active &&\n\t\t\t\t(x + this.w < this.p.camera.bound.min.x ||\n\t\t\t\t\tx - this.w > this.p.camera.bound.max.x ||\n\t\t\t\t\ty + this.h < this.p.camera.bound.min.y ||\n\t\t\t\t\ty - this.h > this.p.camera.bound.max.y)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tx = fixRound(x);\n\t\t\tx -= (this.w * this.tileSize) % 2 ? 0.5 : 0;\n\t\t\ty = fixRound(y);\n\t\t\ty -= (this.h * this.tileSize) % 2 ? 0.5 : 0;\n\n\t\t\t// x += this.tileSize * 0.015;\n\t\t\t// y += this.tileSize * 0.015;\n\n\t\t\tthis.p.push();\n\t\t\tthis.p.imageMode(p5.prototype.CENTER);\n\t\t\tthis.p.rectMode(p5.prototype.CENTER);\n\t\t\tthis.p.ellipseMode(p5.prototype.CENTER);\n\n\t\t\tthis.p.translate(x, y);\n\t\t\tif (this.rotation) this.p.rotate(this.rotation);\n\t\t\tthis.p.scale(this._mirror.x, this._mirror.y);\n\n\t\t\tthis.p.fill(this.color);\n\n\t\t\tthis._draw();\n\n\t\t\tthis.p.pop();\n\t\t\tthis.p.p5play.autoDrawSprites = false;\n\n\t\t\tthis._cameraActiveWhenDrawn = this.p.camera.active;\n\t\t}\n\n\t\t/**\n\t\t * Draws a fixture. Used to draw the sprite's physics body.\n\t\t *\n\t\t * @private\n\t\t */\n\t\t_drawFixture(fxt) {\n\t\t\tconst sh = fxt.m_shape;\n\t\t\tif (sh.m_type == 'polygon' || sh.m_type == 'chain') {\n\t\t\t\tif (sh.m_type == 'chain') {\n\t\t\t\t\tthis.p.push();\n\t\t\t\t\tthis.p.noFill();\n\t\t\t\t}\n\t\t\t\tlet v = sh.m_vertices;\n\t\t\t\tthis.p.beginShape();\n\t\t\t\tfor (let i = 0; i < v.length; i++) {\n\t\t\t\t\tthis.p.vertex(v[i].x * plScale, v[i].y * plScale);\n\t\t\t\t}\n\t\t\t\tif (sh.m_type != 'chain') this.p.endShape(p5.prototype.CLOSE);\n\t\t\t\telse {\n\t\t\t\t\tthis.p.endShape();\n\t\t\t\t\tthis.p.pop();\n\t\t\t\t}\n\t\t\t} else if (sh.m_type == 'circle') {\n\t\t\t\tconst d = sh.m_radius * 2 * plScale;\n\t\t\t\tthis.p.ellipse(sh.m_p.x * plScale, sh.m_p.y * plScale, d, d);\n\t\t\t} else if (sh.m_type == 'edge') {\n\t\t\t\tthis.p.line(\n\t\t\t\t\tsh.m_vertex1.x * plScale,\n\t\t\t\t\tsh.m_vertex1.y * plScale,\n\t\t\t\t\tsh.m_vertex2.x * plScale,\n\t\t\t\t\tsh.m_vertex2.y * plScale\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Set the velocity vector.\n\t\t *\n\t\t * @param {Number} vector|x vector or horizontal velocity\n\t\t * @param {Number} y vertical velocity\n\t\t */\n\t\tsetVelocity(x, y) {\n\t\t\tif (typeof x == 'object') {\n\t\t\t\ty = x.y;\n\t\t\t\tx = x.x;\n\t\t\t}\n\t\t\tthis.vel.x = x;\n\t\t\tthis.vel.y = y;\n\t\t}\n\n\t\t/**\n\t\t * Deprecated: set direction and set speed separately\n\t\t *\n\t\t * Sets the speed of the sprite.\n\t\t * The action overwrites the current velocity.\n\t\t * If direction is not supplied, the current direction is maintained.\n\t\t * If direction is not supplied and there is no current velocity, the\n\t\t * current rotation angle used for the direction.\n\t\t *\n\t\t * @method setSpeed\n\t\t * @deprecated\n\t\t * @param {Number} speed Scalar speed\n\t\t * @param {Number} [direction] angle\n\t\t */\n\t\tsetSpeed(speed, direction) {\n\t\t\tconsole.warn('setSpeed is deprecated. Set sprite.direction and sprite.speed separately instead.');\n\t\t\tif (direction) this.direction = direction;\n\t\t\tthis.speed = speed;\n\t\t}\n\n\t\t/**\n\t\t * Add to the speed of the sprite.\n\t\t * If direction is not supplied, the current direction is maintained.\n\t\t * If direction is not supplied and there is no current velocity, the * current rotation angle used for the direction.\n\t\t *\n\t\t * @method addSpeed\n\t\t * @param {Number} speed Scalar speed\n\t\t * @param {Number} [angle] Direction in degrees\n\t\t */\n\t\taddSpeed(speed, angle) {\n\t\t\tangle ??= this.direction;\n\n\t\t\tthis.vel.x += this.p.cos(angle) * speed;\n\t\t\tthis.vel.y += this.p.sin(angle) * speed;\n\t\t}\n\n\t\tgetDirection() {\n\t\t\treturn this.direction;\n\t\t}\n\n\t\t/**\n\t\t * Move a sprite towards a position\n\t\t *\n\t\t * @method moveTowards\n\t\t * @param {Number} x destination x\n\t\t * @param {Number} y destination y\n\t\t * @param {Number} tracking 1 represents 1:1 tracking, the mouse moves to the destination immediately, 0 represents no tracking\n\t\t */\n\t\tmoveTowards(x, y, tracking) {\n\t\t\tif (typeof x != 'number') {\n\t\t\t\ttracking = y;\n\t\t\t\ty = x.y;\n\t\t\t\tx = x.x;\n\t\t\t}\n\t\t\tif (x === undefined && y === undefined) return;\n\t\t\ttracking ??= 0.1;\n\n\t\t\t// let vec = new pl.Vec2(0, 0);\n\t\t\tif (x !== undefined && x !== null) {\n\t\t\t\t// vec.x = (destX - this.x) * tracking * this.tileSize * this.mass;\n\t\t\t\tthis.vel.x = (x - this.x) * tracking * this.tileSize;\n\t\t\t}\n\t\t\tif (y !== undefined && y !== null) {\n\t\t\t\t// vec.y = (destY - this.y) * tracking * this.tileSize * this.mass;\n\t\t\t\tthis.vel.y = (y - this.y) * tracking * this.tileSize;\n\t\t\t}\n\t\t\t// this.body.applyForce(vec, new pl.Vec2(0, 0));\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @method moveAway\n\t\t */\n\t\tmoveAway(x, y, tracking) {\n\t\t\tthis.moveTowards(...arguments);\n\t\t\tthis.vel.x *= -1;\n\t\t\tthis.vel.y *= -1;\n\t\t}\n\n\t\t/**\n\t\t * Move the sprite to a destination position or use a direction name:\n\t\t * 'up', 'down', 'left', 'right', 'upLeft', 'upRight', 'downLeft',\n\t\t * 'downRight'\n\t\t *\n\t\t * @method move\n\t\t * @param {Number} destX destination x\n\t\t * @param {Number} destY destination y\n\t\t * @param {Number} speed scalar\n\t\t * @returns {Promise} resolves when the movement is complete\n\t\t */\n\t\tmove(destX, destY, speed) {\n\t\t\tif (typeof destX == 'undefined') {\n\t\t\t\tconsole.error('sprite.move ERROR: movement direction or destination not defined');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.dest.x = this.x;\n\t\t\tthis.dest.y = this.y;\n\t\t\t// if the sprite is moving stop it from moving in the direction it used to be moving in\n\t\t\t// if (this.isMoving) {\n\t\t\t// \tthis.velocity.x = 0;\n\t\t\t// \tthis.velocity.y = 0;\n\t\t\t// }\n\t\t\tlet direction = true;\n\t\t\t// if destX is actually the direction (up, down, left, or right)\n\t\t\tif (typeof destX == 'string') {\n\t\t\t\t// shift input parameters over by one\n\t\t\t\tspeed = arguments[1];\n\t\t\t\tdirection = arguments[0];\n\t\t\t\tif (direction == 'up' || direction.slice(0, 2) == 'up') {\n\t\t\t\t\tthis.dest.y = Math.round(this.y - 1);\n\t\t\t\t}\n\t\t\t\tif (direction == 'down' || direction.slice(0, 4) == 'down') {\n\t\t\t\t\tthis.dest.y = Math.round(this.y + 1);\n\t\t\t\t}\n\t\t\t\tif (direction == 'left' || direction.includes('Left')) {\n\t\t\t\t\tthis.dest.x = Math.round(this.x - 1);\n\t\t\t\t}\n\t\t\t\tif (direction == 'right' || direction.includes('Right')) {\n\t\t\t\t\tthis.dest.x = Math.round(this.x + 1);\n\t\t\t\t}\n\t\t\t\tdestX = destY = false;\n\t\t\t\tif (/(up|down)/.test(direction)) {\n\t\t\t\t\tdestY = true;\n\t\t\t\t}\n\t\t\t\tif (/(left|right)/.test(direction)) {\n\t\t\t\t\tdestX = true;\n\t\t\t\t}\n\t\t\t\tthis.heading = direction;\n\t\t\t} else {\n\t\t\t\tif (destX == this.x) destX = false;\n\t\t\t\tif (destX) this.dest.x = destX;\n\t\t\t\tif (destY == this.y) destY = false;\n\t\t\t\tif (destY) this.dest.y = destY;\n\t\t\t}\n\n\t\t\tthis._destIdx++;\n\t\t\tif (!destX && !destY) return true;\n\n\t\t\tif (this.tileSize > 1) speed ??= 0.1;\n\t\t\tspeed ??= 1;\n\t\t\tif (speed <= 0) {\n\t\t\t\tconsole.warn('sprite.move: speed should be a positive number');\n\t\t\t\tspeed = Math.abs(speed);\n\t\t\t}\n\n\t\t\tlet dist = Math.max(Math.abs(this.x - this.dest.x), Math.abs(this.y - this.dest.y));\n\n\t\t\tlet percent = speed / dist;\n\n\t\t\tthis.vel.x = (this.dest.x - this.x) * percent;\n\t\t\tthis.vel.y = (this.dest.y - this.y) * percent;\n\n\t\t\tlet totalSpeed = Math.sqrt(this.vel.x ** 2 + this.vel.y ** 2);\n\n\t\t\t// estimate how many frames it will take for the sprite\n\t\t\t// to reach its destination\n\t\t\tlet frames = Math.floor(dist / totalSpeed) - 5;\n\n\t\t\t// margin of error\n\t\t\tlet margin = totalSpeed + 0.01;\n\n\t\t\tlet destIdx = this._destIdx;\n\n\t\t\treturn (async () => {\n\t\t\t\tlet distX = margin + margin;\n\t\t\t\tlet distY = margin + margin;\n\t\t\t\tdo {\n\t\t\t\t\tawait p5.prototype.delay();\n\n\t\t\t\t\t// skip calculations if not close enough to destination yet\n\t\t\t\t\tif (frames > 0) {\n\t\t\t\t\t\tframes--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (destIdx != this._destIdx) return;\n\n\t\t\t\t\t// check if the sprite has reached its destination\n\t\t\t\t\tdistX = Math.abs(this.x - this.dest.x);\n\t\t\t\t\tdistY = Math.abs(this.y - this.dest.y);\n\t\t\t\t} while ((destX && distX > margin) || (destY && distY > margin));\n\t\t\t\t// stop moving the sprite, snap to destination\n\t\t\t\tif (distX < margin) this.x = this.dest.x;\n\t\t\t\tif (distY < margin) this.y = this.dest.y;\n\t\t\t\tthis.vel.x = 0;\n\t\t\t\tthis.vel.y = 0;\n\t\t\t})();\n\t\t}\n\n\t\t/**\n\t\t * Same as sprite.move\n\t\t *\n\t\t * @method moveTo\n\t\t */\n\t\tmoveTo(destX, destY, speed) {\n\t\t\treturn this.move(destX, destY, speed);\n\t\t}\n\n\t\t/**\n\t\t * Pushes the sprite toward a point.\n\t\t * The force is added to the current velocity.\n\t\t *\n\t\t * Legacy method, use attract, move, or moveTowards instead.\n\t\t *\n\t\t * @deprecated\n\t\t * @param {Number}  magnitude Scalar speed to add\n\t\t * @param {Number}  x Direction x coordinate\n\t\t * @param {Number}  y Direction y coordinate\n\t\t */\n\t\tattractionPoint(magnitude, x, y) {\n\t\t\tlet angle = this.p.atan2(y - this.y, x - this.x);\n\t\t\tthis.vel.x += this.p.cos(angle) * magnitude;\n\t\t\tthis.vel.y += this.p.sin(angle) * magnitude;\n\t\t}\n\n\t\tsnap(o, dist) {\n\t\t\tif (o.isMoving || o.x != o.dest.x || o.y != o.dest.y || !this.isMoving) return;\n\t\t\tdist ??= 1 || this.tileSize * 0.1;\n\t\t\tif (Math.abs(this.x) % 1 >= dist || Math.abs(this.y) % 1 >= dist) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.vel.x = 0;\n\t\t\tthis.vel.y = 0;\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t}\n\n\t\t/**\n\t\t * TODO: Rotates the sprite towards a position or angle.\n\t\t *\n\t\t * @method rotateTowards\n\t\t * @param {*} angle\n\t\t * @param {*} tracking\n\t\t */\n\t\trotateTowards(x, y, tracking) {\n\t\t\t// tracking ??= 0.1;\n\t\t\t// console.log(angle, this.rotation, ang);\n\t\t\t// this.angularVelocity = (angle - this.rotation) * tracking;\n\t\t}\n\n\t\t/**\n\t\t * Rotates the sprite to an angle with a specified speed.\n\t\t *\n\t\t * @method rotate\n\t\t * @param {Number} angle\n\t\t * @param {Number} speed\n\t\t */\n\t\trotate(angle, speed) {\n\t\t\tif (!angle) {\n\t\t\t\tthrow new Error('angle must be a number greater or less than zero');\n\t\t\t}\n\t\t\tlet ang = this.rotation + angle;\n\t\t\tlet mod = ang - this.rotation > 0 ? 1 : -1;\n\t\t\tthis.rotationSpeed = speed * mod;\n\n\t\t\treturn (async () => {\n\t\t\t\tlet cw = ang > this.rotation;\n\t\t\t\twhile ((cw && this.rotation < ang) || (!cw && this.rotation > ang)) {\n\t\t\t\t\tawait p5.prototype.delay();\n\t\t\t\t}\n\t\t\t\tthis.rotationSpeed = 0;\n\t\t\t\tthis.rotation = ang;\n\t\t\t})();\n\t\t}\n\n\t\t/**\n\t\t * Changes the sprite's animation. Use `addAni` to define the\n\t\t * animation(s) first.\n\t\t *\n\t\t * @method ani\n\t\t * @param {...String} anis the names of one or many animations to be played in\n\t\t * sequence\n\t\t * @returns A promise that fulfills when the animation or sequence of animations\n\t\t * completes\n\t\t */\n\t\tasync changeAni(...anis) {\n\t\t\tif (anis.length == 1 && Array.isArray(anis[0])) {\n\t\t\t\tanis = anis[0];\n\t\t\t}\n\t\t\tlet count = ++this._aniChanged;\n\n\t\t\tfor (let i = 0; i < anis.length; i++) {\n\t\t\t\tif (typeof anis[i] == 'string') anis[i] = { name: anis[i] };\n\t\t\t\tlet ani = anis[i];\n\t\t\t\tif (ani.name[0] == '!') {\n\t\t\t\t\tani.name = ani.name.slice(1);\n\t\t\t\t\tani.start = -1;\n\t\t\t\t\tani.end = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet _ani = (name, start, end) => {\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\tthis._changeAni(name);\n\t\t\t\t\tif (start < 0) start = this.animation.length + start;\n\t\t\t\t\tif (start) this.animation.frame = start;\n\n\t\t\t\t\tif (end !== undefined) this.animation.goToFrame(end);\n\t\t\t\t\telse if (this.frame == this.lastFrame) resolve();\n\n\t\t\t\t\tthis.animation.onComplete = () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tfor (let i = 0; i < anis.length; i++) {\n\t\t\t\tlet ani = anis[i];\n\t\t\t\tif (ani.name == '*') {\n\t\t\t\t\tif (count == this._aniChanged) i = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet { name, start, end } = ani;\n\t\t\t\tawait _ani(name, start, end);\n\t\t\t}\n\t\t}\n\n\t\tchangeAnimation() {\n\t\t\treturn this.changeAni(...arguments);\n\t\t}\n\n\t\t/**\n\t\t * Changes the displayed animation. The animation must be added first\n\t\t * using the sprite.addAnimation method. The animation could also be\n\t\t * added using the group.addAnimation method to a group the sprite\n\t\t * has been added to.\n\t\t *\n\t\t * See SpriteAnimation for more control over the sequence.\n\t\t *\n\t\t * @method changeAnimation\n\t\t * @param {String} label SpriteAnimation identifier\n\t\t */\n\t\t_changeAni(label) {\n\t\t\tlet ani = this.animations[label];\n\t\t\tif (!ani) {\n\t\t\t\tfor (let g of this.groups) {\n\t\t\t\t\tani = g.animations[label];\n\t\t\t\t\tif (ani) {\n\t\t\t\t\t\tani = ani.clone();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ani) {\n\t\t\t\tthis.p.noLoop();\n\t\t\t\tthrow new Error('changeAnimation error: no animation named ' + label);\n\t\t\t}\n\t\t\tthis._animation = ani;\n\t\t\tthis.animation.name = label;\n\t\t\t// reset to frame 0 of that animation\n\t\t\tif (this.autoResetAnimations || (this.autoResetAnimations !== false && this.p.world.autoResetAnimations)) {\n\t\t\t\tthis.animation.frame = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Removes the Sprite from the sketch.\n\t\t * The removed Sprite will not be drawn or updated anymore.\n\t\t *\n\t\t * @method remove\n\t\t */\n\t\tremove() {\n\t\t\tif (this.body) this.p.world.destroyBody(this.body);\n\t\t\tthis.removed = true;\n\n\t\t\t//when removed from the \"scene\" also remove all the references in all the groups\n\t\t\twhile (this.groups.length > 0) {\n\t\t\t\tthis.groups[0].remove(this);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns the sprite's unique identifier\n\t\t *\n\t\t * @method toString\n\t\t * @returns the sprite's id\n\t\t */\n\t\ttoString() {\n\t\t\treturn 's' + this.idNum;\n\t\t}\n\n\t\t// createJoint(type, { body }, props, anchor) {\n\t\t// \tlet j;\n\t\t// \tconst bodyA = this;\n\t\t// \tj = {\n\t\t// \t\tbodyA: this.body,\n\t\t// \t\tbodyB: body,\n\t\t// \t\tlength: props.length != undefined ? props.length / plScale : null,\n\t\t// \t\tfrequencyHz: props.frequencyHz,\n\t\t// \t\tdampingRatio: props.dampingRatio,\n\t\t// \t\tcollideConnected: props.collideConnected,\n\t\t// \t\tmaxLength: props.maxLength != undefined ? props.maxLength / plScale : null,\n\t\t// \t\tuserData: props.userData,\n\t\t// \t\tlengthA: props.lengthA != undefined ? props.lengthA / plScale : null,\n\t\t// \t\tlengthB: props.lengthB != undefined ? props.lengthB / plScale : null,\n\t\t// \t\tratio: props.ratio,\n\t\t// \t\tgroundAnchorA: props.groundAnchorA ? scaleTo(props.groundAnchorA) : new pl.Vec2(0, 0),\n\t\t// \t\tgroundAnchorB: props.groundAnchorB ? scaleTo(props.groundAnchorB) : new pl.Vec2(0, 0),\n\t\t// \t\tenableLimit: props.enableLimit,\n\t\t// \t\tenableMotor: props.enableMotor,\n\t\t// \t\tlowerAngle: props.lowerAngle,\n\t\t// \t\tmaxMotorTorque: props.maxMotorTorque,\n\t\t// \t\tmaxMotorForce: props.maxMotorForce,\n\t\t// \t\tmotorSpeed: props.motorSpeed,\n\t\t// \t\treferenceAngle: props.referenceAngle,\n\t\t// \t\tupperAngle: props.upperAngle,\n\t\t// \t\tmaxForce: props.maxForce,\n\t\t// \t\tmaxTorque: props.maxTorque,\n\t\t// \t\tlocalAxisA: props.localAxisA,\n\t\t// \t\tupperTranslation: props.upperTranslation ? props.upperTranslation / plScale : 1,\n\t\t// \t\tlowerTranslation: props.lowerTranslation ? props.lowerTranslation / plScale : 1,\n\t\t// \t\tangularOffset: props.angularOffset,\n\t\t// \t\tjoint1: props.joint1,\n\t\t// \t\tjoint2: props.joint2,\n\t\t// \t\tcorrectionFactor: props.correctionFactor,\n\t\t// \t\tlinearOffset: props.linearOffset ? scaleTo(props.linearOffset) : new pl.Vec2(0, 0)\n\t\t// \t};\n\t\t// \tif (anchor) {\n\t\t// \t\tj.localAnchorA = bodyA.body.getLocalPoint(scaleTo(anchor));\n\t\t// \t\tj.localAnchorB = body.getLocalPoint(scaleTo(anchor));\n\t\t// \t} else {\n\t\t// \t\tj.localAnchorA = props.localAnchorA ? scaleTo(props.localAnchorA) : new pl.Vec2(0, 0);\n\t\t// \t\tj.localAnchorB = props.localAnchorB ? scaleTo(props.localAnchorB) : new pl.Vec2(0, 0);\n\t\t// \t}\n\t\t// \tif (type == 'distance') {\n\t\t// \t\tj = pl.DistanceJoint(j);\n\t\t// \t} else if (type == 'pulley') {\n\t\t// \t\tj = pl.PulleyJoint(j);\n\t\t// \t} else if (type == 'wheel') {\n\t\t// \t\tj = pl.WheelJoint(j);\n\t\t// \t} else if (type == 'rope') {\n\t\t// \t\tj = pl.RopeJoint(j);\n\t\t// \t} else if (type == 'weld') {\n\t\t// \t\tj = pl.WeldJoint(j);\n\t\t// \t} else if (type == 'revolute') {\n\t\t// \t\tj = pl.RevoluteJoint(j);\n\t\t// \t} else if (type == 'gear') {\n\t\t// \t\tj = pl.GearJoint(j);\n\t\t// \t} else if (type == 'friction') {\n\t\t// \t\tj = pl.FrictionJoint(j);\n\t\t// \t} else if (type == 'motor') {\n\t\t// \t\tj = pl.MotorJoint(j);\n\t\t// \t} else if (type == 'prismatic') {\n\t\t// \t\tj = pl.PrismaticJoint(j);\n\t\t// \t} else if (type == 'mouse') {\n\t\t// \t\t/*j = new box2d.b2MouseJointDef();\n\t\t//         j.bodyA = bodyA!=null?bodyA.body:b2world.CreateBody(new box2d.b2BodyDef());\n\t\t//         j.bodyB = bodyB.body;\n\t\t//         j.target = b2scaleTo(props.xy);\n\t\t//         j.collideConnected = true;\n\t\t//         j.maxForce = props.maxForce||(1000.0 * bodyB.body.GetMass());\n\t\t//         j.frequencyHz = props.frequency||5;  // Try a value less than 5 (0 for no elasticity)\n\t\t//         j.dampingRatio = props.damping||0.9; // Ranges between 0 and 1 (1 for no springiness)\n\t\t//         bodyB.body.SetAwake(true);\n\t\t//         bodyA=bodyB;*/\n\t\t// \t}\n\t\t// \treturn this.p.world.createJoint(j);\n\t\t// }\n\n\t\t_ensureCollide(target, callback) {\n\t\t\tif (!(target instanceof Sprite) && !(target instanceof Group)) {\n\t\t\t\tthrow new Error('collide target must be a sprite or a group');\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @method collide\n\t\t * @deprecated use collides instead\n\t\t */\n\t\tcollide(target, callback) {\n\t\t\treturn this.collides(target, callback);\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the sprite collides with the\n\t\t * target sprite or group.\n\t\t *\n\t\t * Custom collision event handling can be done by using this function\n\t\t * in an if statement or adding a callback as the second parameter.\n\t\t *\n\t\t * @method collides\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t */\n\t\tcollides(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._collides[target] = callback || true;\n\t\t\treturn this._collisions.get(target) == 1;\n\t\t}\n\n\t\t/**\n\t\t * Returns a truthy value while the sprite is colliding with the\n\t\t * target sprite or group. The value is the number of frames that\n\t\t * the sprite has been colliding with the target.\n\t\t *\n\t\t * @method colliding\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Number} frames\n\t\t */\n\t\tcolliding(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._colliding[target] = callback || true;\n\t\t\tlet val = this._collisions.get(target);\n\t\t\treturn val > 0 ? val : 0;\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the sprite no longer overlaps\n\t\t * with the target sprite or group.\n\t\t *\n\t\t * @method collided\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Boolean}\n\t\t */\n\t\tcollided(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._collided[target] = callback || true;\n\t\t\treturn this._collisions.get(target) == -1;\n\t\t}\n\n\t\t// TODO\n\t\t// displaces(target, callback) {}\n\n\t\t_ensureOverlap(target, callback) {\n\t\t\tif (!(target instanceof Sprite) && !(target instanceof Group)) {\n\t\t\t\tthrow new Error('collide target must be a sprite or a group');\n\t\t\t}\n\t\t\tif (!this._hasOverlaps) this._createSensors();\n\t\t\tif (target instanceof Sprite) {\n\t\t\t\tif (!target._hasOverlaps) target._createSensors();\n\t\t\t} else if (target instanceof Group) {\n\t\t\t\tif (!target._hasOverlaps) {\n\t\t\t\t\tfor (let s of target) {\n\t\t\t\t\t\tif (!s._hasOverlaps) s._createSensors();\n\t\t\t\t\t}\n\t\t\t\t\ttarget._hasOverlaps = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._overlap[target] = true;\n\t\t}\n\n\t\t/**\n\t\t * @method overlap\n\t\t * @deprecated use overlaps instead\n\t\t */\n\t\toverlap(target, callback) {\n\t\t\treturn this.overlaps(target, callback);\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the sprite overlaps with the\n\t\t * target sprite or group.\n\t\t *\n\t\t * Custom overlap event handling can be done by using this function\n\t\t * in an if statement or adding a callback as the second parameter.\n\t\t *\n\t\t * @method overlaps\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t */\n\t\toverlaps(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlaps[target] = callback || true;\n\t\t\treturn this._overlappers.get(target) == 1;\n\t\t}\n\n\t\t/**\n\t\t * Returns a truthy value while the sprite is overlapping with the\n\t\t * target sprite or group. The value returned is the number of\n\t\t * frames the sprite has been overlapping with the target.\n\t\t *\n\t\t * @method overlapping\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Number} frames\n\t\t */\n\t\toverlapping(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlapping[target] = callback || true;\n\t\t\tlet val = this._overlappers.get(target);\n\t\t\treturn val > 0 ? val : 0;\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the sprite no longer overlaps\n\t\t * with the target sprite or group.\n\t\t *\n\t\t * @method overlapped\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Boolean}\n\t\t */\n\t\toverlapped(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlapped[target] = callback || true;\n\t\t\treturn this._overlappers.get(target) == -1;\n\t\t}\n\n\t\t_createSensors() {\n\t\t\tlet shape;\n\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\tshape = fxt.m_shape;\n\t\t\t\tthis.body.createFixture({\n\t\t\t\t\tshape: shape,\n\t\t\t\t\tisSensor: true\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._hasOverlaps = true;\n\t\t}\n\n\t\t/**\n\t\t * Use sprite.animation.name instead.\n\t\t *\n\t\t * @deprecated\n\t\t * @returns the name of the sprite's current animation\n\t\t */\n\t\tgetAnimationLabel() {\n\t\t\treturn this.animation.name;\n\t\t}\n\t}\n\n\t/**\n\t * Look at the Animation reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/sprite_animation.html\n\t *\n\t * A SpriteAnimation object contains a series of images (p5.Image objects)\n\t * that can be displayed sequentially.\n\t *\n\t * A sprite can have multiple labeled animations, see Sprite.addAnimation\n\t * and Sprite.changeAnimation, but you can also create animations that\n\t * can be used without being added to a sprite first.\n\t *\n\t * An animation can be created either from a list of images or sequentially\n\t * numbered images. p5.play will try to detect the sequence pattern.\n\t *\n\t * For example if the image file path is \"image1.png\" and the last frame\n\t * index is 3 then \"image2.png\" and \"image3.png\" will be loaded as well.\n\t *\n\t * @example\n\t *\n\t * let shapeShifter = new SpriteAnimation(\"dog.png\", \"cat.png\", \"snake.png\");\n\t * let walking = new SpriteAnimation(\"walking0001.png\", 5);\n\t *\n\t * @class SpriteAnimation\n\t * @constructor\n\t */\n\tclass SpriteAnimation extends Array {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.p = pInst;\n\t\t\tlet args = [...arguments];\n\n\t\t\t/**\n\t\t\t * The name of the animation\n\t\t\t *\n\t\t\t * @property name\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tthis.name = 'default';\n\n\t\t\tlet parent;\n\n\t\t\tif (args[0] instanceof Sprite || args[0] instanceof Group) {\n\t\t\t\tparent = args[0];\n\t\t\t\targs = args.slice(1);\n\t\t\t}\n\t\t\tparent ??= this.p.allSprites;\n\n\t\t\tif (typeof args[0] == 'string' && (args[0].length == 1 || !args[0].includes('.'))) {\n\t\t\t\tthis.name = args[0];\n\t\t\t\targs = args.slice(1);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The index of the current frame that the animation is on.\n\t\t\t *\n\t\t\t * @property frame\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\tthis.frame = 0;\n\n\t\t\tthis.cycles = 0;\n\n\t\t\tthis.targetFrame = -1;\n\n\t\t\t/**\n\t\t\t * The offset is how far the animation should be placed from\n\t\t\t * the location it is played at.\n\t\t\t *\n\t\t\t * @property offset\n\t\t\t * @type {Object} x and y keys\n\t\t\t *\n\t\t\t * @example\n\t\t\t * offset.x = 16;\n\t\t\t */\n\t\t\tthis.offset = { x: 0, y: 0 };\n\n\t\t\t/**\n\t\t\t * Delay between frames in number of draw cycles.\n\t\t\t * If set to 4 the framerate of the animation would be the\n\t\t\t * sketch framerate divided by 4 (60fps = 15fps)\n\t\t\t *\n\t\t\t * @property frameDelay\n\t\t\t * @type {Number}\n\t\t\t * @default 4\n\t\t\t */\n\t\t\tthis.frameDelay = 4;\n\n\t\t\t/**\n\t\t\t * True if the animation is currently playing.\n\t\t\t *\n\t\t\t * @property playing\n\t\t\t * @type {Boolean}\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.playing = true;\n\n\t\t\t/**\n\t\t\t * Animation visibility.\n\t\t\t *\n\t\t\t * @property visible\n\t\t\t * @type {Boolean}\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.visible = true;\n\n\t\t\t/**\n\t\t\t * If set to false the animation will stop after reaching the last frame\n\t\t\t *\n\t\t\t * @property looping\n\t\t\t * @type {Boolean}\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.looping = true;\n\n\t\t\t/**\n\t\t\t * Ends the loop on frame 0 instead of the last frame.\n\t\t\t * This is useful for animations that are symmetric.\n\t\t\t * For example a walking cycle where the first frame is the\n\t\t\t * same as the last frame.\n\t\t\t *\n\t\t\t * @property endOnFirstFrame\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.endOnFirstFrame = false;\n\n\t\t\t/**\n\t\t\t * True if frame changed during the last draw cycle\n\t\t\t *\n\t\t\t * @property frameChanged\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis.frameChanged = false;\n\n\t\t\tthis.rotation = 0;\n\t\t\tthis.scale = { x: 1, y: 1 };\n\n\t\t\tif (args.length == 0 || typeof args[0] == 'number') return;\n\n\t\t\t// sequence mode\n\t\t\tif (\n\t\t\t\targs.length == 2 &&\n\t\t\t\ttypeof args[0] == 'string' &&\n\t\t\t\t(typeof args[1] == 'string' || typeof args[1] == 'number')\n\t\t\t) {\n\t\t\t\tlet from = args[0];\n\t\t\t\tlet to, num2;\n\t\t\t\tif (!isNaN(args[1])) num2 = Number(args[1]);\n\t\t\t\telse to = args[1];\n\n\t\t\t\t// print(\"sequence mode \"+from+\" -> \"+to);\n\n\t\t\t\t// make sure the extensions are fine\n\t\t\t\tif (from.slice(-4) != '.png' || (to && to.slice(-4) != '.png')) {\n\t\t\t\t\tthrow new Error('SpriteAnimation error: you need to use .png files (filename ' + from + ')');\n\t\t\t\t}\n\n\t\t\t\tlet digits1 = 0;\n\t\t\t\tlet digits2 = 0;\n\n\t\t\t\t// skip extension work backwards to find the numbers\n\t\t\t\tfor (let i = from.length - 5; i >= 0; i--) {\n\t\t\t\t\tif (!isNaN(from.charAt(i))) digits1++;\n\t\t\t\t\telse break;\n\t\t\t\t}\n\n\t\t\t\tif (to) {\n\t\t\t\t\tfor (let i = to.length - 5; i >= 0; i--) {\n\t\t\t\t\t\tif (!isNaN(to.charAt(i))) digits2++;\n\t\t\t\t\t\telse break;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet prefix1 = from.slice(0, -4 - digits1);\n\t\t\t\tlet prefix2;\n\t\t\t\tif (to) prefix2 = to.slice(0, -4 - digits2);\n\n\t\t\t\t// images don't belong to the same sequence\n\t\t\t\t// they are just two separate images with numbers\n\t\t\t\tif (to && prefix1 != prefix2) {\n\t\t\t\t\tthis.push(this.p.loadImage(from));\n\t\t\t\t\tthis.push(this.p.loadImage(to));\n\t\t\t\t} else {\n\t\t\t\t\t// Our numbers likely have leading zeroes, which means that some\n\t\t\t\t\t// browsers (e.g., PhantomJS) will interpret them as base 8 (octal)\n\t\t\t\t\t// instead of decimal. To fix this, we'll explicity tell parseInt to\n\t\t\t\t\t// use a base of 10 (decimal). For more details on this issue, see\n\t\t\t\t\t// http://stackoverflow.com/a/8763427/2422398.\n\t\t\t\t\tlet num1 = parseInt(from.slice(-4 - digits1, -4), 10);\n\t\t\t\t\tnum2 ??= parseInt(to.slice(-4 - digits2, -4), 10);\n\n\t\t\t\t\t// swap if inverted\n\t\t\t\t\tif (num2 < num1) {\n\t\t\t\t\t\tlet t = num2;\n\t\t\t\t\t\tnum2 = num1;\n\t\t\t\t\t\tnum1 = t;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fileName;\n\t\t\t\t\tif (!to || digits1 == digits2) {\n\t\t\t\t\t\t// load all images\n\t\t\t\t\t\tfor (let i = num1; i <= num2; i++) {\n\t\t\t\t\t\t\t// Use nf() to number format 'i' into the amount of digits\n\t\t\t\t\t\t\t// ex: 14 with 4 digits is 0014\n\t\t\t\t\t\t\tfileName = prefix1 + this.p.nf(i, digits1) + '.png';\n\t\t\t\t\t\t\tthis.push(this.p.loadImage(fileName));\n\t\t\t\t\t\t}\n\t\t\t\t\t} // case: case img1, img2\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor (let i = num1; i <= num2; i++) {\n\t\t\t\t\t\t\t// Use nf() to number format 'i' into four digits\n\t\t\t\t\t\t\tfileName = prefix1 + i + '.png';\n\t\t\t\t\t\t\tthis.push(this.p.loadImage(fileName));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // end sequence mode\n\n\t\t\t// SpriteSheet mode\n\t\t\telse if (typeof args[args.length - 1] != 'string' && !(args[args.length - 1] instanceof p5.Image)) {\n\t\t\t\tlet sheet = parent.spriteSheet;\n\t\t\t\tlet atlas;\n\t\t\t\tif (args[0] instanceof p5.Image || typeof args[0] == 'string') {\n\t\t\t\t\tif (args.length >= 3) {\n\t\t\t\t\t\tthrow new Error('SpriteAnimation error: the name of animation should go first');\n\t\t\t\t\t}\n\t\t\t\t\tsheet = args[0];\n\t\t\t\t\tatlas = args[1];\n\t\t\t\t} else {\n\t\t\t\t\tatlas = args[0];\n\t\t\t\t}\n\n\t\t\t\tlet _this = this;\n\n\t\t\t\tif (sheet instanceof p5.Image && sheet.width != 1 && sheet.height != 1) {\n\t\t\t\t\tthis.spriteSheet = sheet;\n\t\t\t\t\t_generateSheetFrames();\n\t\t\t\t} else {\n\t\t\t\t\tlet url;\n\t\t\t\t\tif (typeof sheet == 'string') url = sheet;\n\t\t\t\t\telse url = sheet.url;\n\t\t\t\t\tthis.spriteSheet = this.p.loadImage(url, () => {\n\t\t\t\t\t\t_generateSheetFrames();\n\t\t\t\t\t});\n\t\t\t\t\t// parent.spriteSheet = this.spriteSheet;\n\t\t\t\t}\n\n\t\t\t\tfunction _generateSheetFrames() {\n\t\t\t\t\tif (Array.isArray(atlas) || Array.isArray(atlas.frames)) {\n\t\t\t\t\t\tif (typeof atlas[0] == 'number') {\n\t\t\t\t\t\t\tif (atlas.length == 4) {\n\t\t\t\t\t\t\t\tatlas = { pos: atlas.slice(0, 2), size: atlas.slice(2) };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tatlas = { pos: atlas };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet frames = atlas;\n\t\t\t\t\t\t\tif (Array.isArray(atlas.frames)) {\n\t\t\t\t\t\t\t\tframes = atlas.frames;\n\t\t\t\t\t\t\t\tdelete atlas.frames;\n\t\t\t\t\t\t\t\tfor (let i = 0; i < frames.length; i++) {\n\t\t\t\t\t\t\t\t\tframes[i] = {\n\t\t\t\t\t\t\t\t\t\tpos: frames[i]\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tObject.assign(frames[i], atlas);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (let frame of frames) {\n\t\t\t\t\t\t\t\tatlas = frame;\n\t\t\t\t\t\t\t\t_generateSheetFrames();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet { w, h, width, height, size, pos, line, x, y, frames, delay, rotation } = atlas;\n\t\t\t\t\tif (delay) _this.frameDelay = delay;\n\t\t\t\t\tif (rotation) _this.rotation = rotation;\n\n\t\t\t\t\tw ??= width;\n\t\t\t\t\th ??= height;\n\n\t\t\t\t\tlet tileSize;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tw ??= parent.w;\n\t\t\t\t\t\th ??= parent.h;\n\t\t\t\t\t\ttileSize = parent.tileSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tx ??= 0;\n\t\t\t\t\ty ??= 0;\n\t\t\t\t\tpos ??= line;\n\t\t\t\t\t// if pos is a number or only y is defined but not x\n\t\t\t\t\t// the animation's first frame is at x = 0\n\t\t\t\t\t// the line number is the location of the animation line\n\t\t\t\t\t// given as a distance from the top of the image\n\t\t\t\t\tif (typeof pos == 'number') {\n\t\t\t\t\t\ty = pos;\n\t\t\t\t\t} else if (pos) {\n\t\t\t\t\t\t// pos is the location of the animation line\n\t\t\t\t\t\t// given as a [row,column] coordinate pair of distances in tiles\n\t\t\t\t\t\t// from the top left corner of the image\n\t\t\t\t\t\tx = pos[0]; // column\n\t\t\t\t\t\ty = pos[1]; // row\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof size == 'number') {\n\t\t\t\t\t\tw = h = size;\n\t\t\t\t\t} else if (size) {\n\t\t\t\t\t\tw = size[0];\n\t\t\t\t\t\th = size[1];\n\t\t\t\t\t}\n\n\t\t\t\t\t// get the real dimensions and position of the frame\n\t\t\t\t\t// in the sheet\n\t\t\t\t\tx *= tileSize;\n\t\t\t\t\ty *= tileSize;\n\n\t\t\t\t\tif (!w || !h) {\n\t\t\t\t\t\tif (tileSize) {\n\t\t\t\t\t\t\tw = h = 1 * tileSize;\n\t\t\t\t\t\t} else if (_this.spriteSheet.width < _this.spriteSheet.height) {\n\t\t\t\t\t\t\tw = h = _this.spriteSheet.width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tw = h = _this.spriteSheet.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tw *= tileSize;\n\t\t\t\t\t\th *= tileSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet frameCount = frames || 1;\n\n\t\t\t\t\t// add all the frames in the animation to the frames array\n\t\t\t\t\tfor (let i = 0; i < frameCount; i++) {\n\t\t\t\t\t\t_this.push({ x, y, w, h });\n\t\t\t\t\t\tx += w;\n\t\t\t\t\t\tif (x >= _this.spriteSheet.width) {\n\t\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\t\ty += h;\n\t\t\t\t\t\t\tif (y >= _this.spriteSheet.height) y = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // end SpriteSheet mode\n\t\t\telse {\n\t\t\t\t// list of images\n\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\tif (args[i] instanceof p5.Image) this.push(args[i]);\n\t\t\t\t\telse this.push(this.p.loadImage(args[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\tlet ani = new SpriteAnimation();\n\t\t\tani.spriteSheet = this.spriteSheet;\n\t\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\t\tani.push(this[i]);\n\t\t\t}\n\t\t\tani.offset.x = this.offset.x;\n\t\t\tani.offset.y = this.offset.y;\n\t\t\tani.frameDelay = this.frameDelay;\n\t\t\tani.playing = this.playing;\n\t\t\tani.looping = this.looping;\n\t\t\tani.rotation = this.rotation;\n\t\t\treturn ani;\n\t\t}\n\n\t\t/**\n\t\t * Draws the animation at coordinate x and y.\n\t\t * Updates the frames automatically.\n\t\t *\n\t\t * Optional parameters effect the current draw cycle only and\n\t\t * are not saved between draw cycles.\n\t\t *\n\t\t * @method draw\n\t\t * @param {Number} x horizontal position\n\t\t * @param {Number} y vertical position\n\t\t * @param {Number} [r] rotation\n\t\t * @param {Number} [sx] scale x\n\t\t * @param {Number} [sy] scale y\n\t\t */\n\t\tdraw(x, y, r, sx, sy) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\tif (!this.visible) return;\n\n\t\t\tthis.p.push();\n\t\t\tthis.p.imageMode(p5.prototype.CENTER);\n\t\t\tthis.p.translate(this.x, this.y);\n\t\t\tthis.p.rotate(r || this.rotation);\n\t\t\tthis.p.scale(sx || this.scale.x, sy || this.scale.y);\n\t\t\tlet img = this[this.frame];\n\t\t\tif (img !== undefined) {\n\t\t\t\tif (this.spriteSheet) {\n\t\t\t\t\tlet { x, y, w, h } = img; // image info\n\t\t\t\t\tthis.p.image(this.spriteSheet, this.offset.x, this.offset.y, w, h, x, y, w, h);\n\t\t\t\t} else {\n\t\t\t\t\tthis.p.image(img, this.offset.x, this.offset.y);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.p.print('Warning undefined frame ' + this.frame);\n\t\t\t}\n\n\t\t\tthis.p.pop();\n\t\t}\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdate() {\n\t\t\tthis.cycles++;\n\t\t\tvar previousFrame = this.frame;\n\t\t\tthis.frameChanged = false;\n\n\t\t\t//go to frame\n\t\t\tif (this.length === 1) {\n\t\t\t\tthis.playing = false;\n\t\t\t\tthis.frame = 0;\n\t\t\t}\n\n\t\t\tif (this.playing && this.cycles % this.frameDelay === 0) {\n\t\t\t\tthis.frameChanged = true;\n\n\t\t\t\tif ((this.targetFrame == -1 && this.frame == this.lastFrame) || this.frame == this.targetFrame) {\n\t\t\t\t\tif (this.endOnFirstFrame) this.frame = 0;\n\t\t\t\t\tif (this.looping) this.targetFrame = -1;\n\t\t\t\t\telse this.playing = false;\n\t\t\t\t\tthis.onComplete(); //fire when on last frame\n\t\t\t\t\tif (!this.looping) return;\n\t\t\t\t}\n\n\t\t\t\t//going to target frame up\n\t\t\t\tif (this.targetFrame > this.frame && this.targetFrame !== -1) {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t}\n\t\t\t\t//going to target frame down\n\t\t\t\telse if (this.targetFrame < this.frame && this.targetFrame !== -1) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t} else if (this.targetFrame === this.frame && this.targetFrame !== -1) {\n\t\t\t\t\tthis.playing = false;\n\t\t\t\t} else if (this.looping) {\n\t\t\t\t\t//advance frame\n\t\t\t\t\t//if next frame is too high\n\t\t\t\t\tif (this.frame >= this.lastFrame) {\n\t\t\t\t\t\tthis.frame = 0;\n\t\t\t\t\t} else this.frame++;\n\t\t\t\t} else {\n\t\t\t\t\t//if next frame is too high\n\t\t\t\t\tif (this.frame < this.lastFrame) this.frame++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Plays the animation, starting from the specified frame.\n\t\t *\n\t\t * @method play\n\t\t */\n\t\tplay(frame) {\n\t\t\tthis.playing = true;\n\t\t\tif (frame !== undefined) this.frame = frame;\n\t\t\tthis.targetFrame = -1;\n\t\t}\n\n\t\t/**\n\t\t * Stops the animation.\n\t\t *\n\t\t * @method stop\n\t\t */\n\t\tstop() {\n\t\t\tthis.playing = false;\n\t\t}\n\n\t\t/**\n\t\t * Plays the animation backwards.\n\t\t * Equivalent to ani.goToFrame(0)\n\t\t *\n\t\t * @method rewind\n\t\t */\n\t\trewind() {\n\t\t\tthis.looping = false;\n\t\t\tthis.goToFrame(0);\n\t\t}\n\n\t\t/**\n\t\t * Plays the animation forwards and loops it.\n\t\t *\n\t\t * @method loop\n\t\t */\n\t\tloop() {\n\t\t\tthis.looping = true;\n\t\t\tthis.playing = true;\n\t\t}\n\n\t\t/**\n\t\t * Prevents the animation from looping\n\t\t *\n\t\t * @method noLoop\n\t\t */\n\t\tnoLoop() {\n\t\t\tthis.looping = false;\n\t\t}\n\n\t\t/**\n\t\t * fire when animation ends\n\t\t *\n\t\t * @method onComplete\n\t\t * @return {SpriteAnimation}\n\t\t */\n\t\tonComplete() {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t/**\n\t\t * Deprecated, change the frame property directly.\n\t\t *\n\t\t * Changes the current frame.\n\t\t *\n\t\t * @deprecated\n\t\t * @param {Number} frame Frame number (starts from 0).\n\t\t */\n\t\tchangeFrame(f) {\n\t\t\tif (f < this.length) this.frame = f;\n\t\t\telse this.frame = this.length - 1;\n\n\t\t\tthis.targetFrame = -1;\n\t\t\t//this.playing = false;\n\t\t}\n\n\t\t/**\n\t\t * Goes to the next frame and stops.\n\t\t *\n\t\t * @method nextFrame\n\t\t */\n\t\tnextFrame() {\n\t\t\tif (this.frame < this.length - 1) this.frame = this.frame + 1;\n\t\t\telse if (this.looping) this.frame = 0;\n\n\t\t\tthis.targetFrame = -1;\n\t\t\tthis.playing = false;\n\t\t}\n\n\t\t/**\n\t\t * Goes to the previous frame and stops.\n\t\t *\n\t\t * @method previousFrame\n\t\t */\n\t\tpreviousFrame() {\n\t\t\tif (this.frame > 0) this.frame = this.frame - 1;\n\t\t\telse if (this.looping) this.frame = this.length - 1;\n\n\t\t\tthis.targetFrame = -1;\n\t\t\tthis.playing = false;\n\t\t}\n\n\t\t/**\n\t\t * Plays the animation forward or backward toward a target frame.\n\t\t *\n\t\t * @method goToFrame\n\t\t * @param {Number} toFrame Frame number destination (starts from 0)\n\t\t */\n\t\tgoToFrame(toFrame) {\n\t\t\tif (toFrame < 0 || toFrame >= this.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// targetFrame gets used by the update() method to decide what frame to\n\t\t\t// select next.  When it's not being used it gets set to -1.\n\t\t\tthis.targetFrame = toFrame;\n\n\t\t\tif (this.targetFrame !== this.frame) {\n\t\t\t\tthis.playing = true;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Use .frame instead.\n\t\t *\n\t\t * Returns the current frame number.\n\t\t *\n\t\t * @deprecated\n\t\t * @return {Number} Current frame (starts from 0)\n\t\t */\n\t\tgetFrame() {\n\t\t\treturn this.frame;\n\t\t}\n\n\t\t/**\n\t\t * Use .lastFrame instead.\n\t\t *\n\t\t * Returns the last frame number.\n\t\t *\n\t\t * @deprecated\n\t\t * @return {Number} Last frame number (starts from 0)\n\t\t */\n\t\tgetLastFrame() {\n\t\t\treturn this.lastFrame;\n\t\t}\n\n\t\tget lastFrame() {\n\t\t\treturn this.length - 1;\n\t\t}\n\n\t\t/**\n\t\t * Returns the current frame image as p5.Image.\n\t\t *\n\t\t * @method getImage\n\t\t * @return {p5.Image} Current frame image\n\t\t */\n\t\tget frameImage() {\n\t\t\tlet f = this.frame;\n\t\t\tlet img = this[f];\n\t\t\tif (img instanceof p5.Image) return img;\n\n\t\t\tlet { x, y, w, h } = img; // image info\n\t\t\tlet g = createGraphics(w, h);\n\t\t\tg.image(this.spriteSheet, this.offset.x, this.offset.y, w, h, x, y, w, h);\n\t\t\treturn g;\n\t\t}\n\n\t\tget w() {\n\t\t\treturn this.width;\n\t\t}\n\n\t\tget width() {\n\t\t\tif (this[this.frame] instanceof p5.Image) {\n\t\t\t\treturn this[this.frame].width;\n\t\t\t} else if (this[this.frame]) {\n\t\t\t\treturn this[this.frame].w;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\n\t\tget h() {\n\t\t\treturn this.height;\n\t\t}\n\n\t\tget height() {\n\t\t\tif (this[this.frame] instanceof p5.Image) {\n\t\t\t\treturn this[this.frame].height;\n\t\t\t} else if (this[this.frame]) {\n\t\t\t\treturn this[this.frame].h;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\n\t\tget frames() {\n\t\t\tlet frames = [];\n\t\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\t\tframes.push(this[i]);\n\t\t\t}\n\t\t\treturn frames;\n\t\t}\n\n\t\tget images() {\n\t\t\treturn this.frames;\n\t\t}\n\t}\n\n\t/**\n\t * Look at the Group reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/group.html\n\t *\n\t * In p5.play groups are collections of sprites with similar behavior.\n\t * For example a group may contain all the coin sprites that the\n\t * player can collect.\n\t *\n\t * Group extends Array. You can use them in for loops just like arrays\n\t * since they inherit all the functions and properties of standard\n\t * arrays such as group.length\n\t *\n\t * Since groups just contain references to sprites, a sprite can be in\n\t * multiple groups.\n\t *\n\t * sprite.remove() removes the sprite from all the groups\n\t * it belongs to. group.removeAll() removes all the sprites from\n\t * a group.\n\t *\n\t * The top level group is a p5 instance level variable named\n\t * 'allSprites' that contains all the sprites added to the sketch.\n\t *\n\t * @class Group\n\t * @constructor\n\t */\n\tclass Group extends Array {\n\t\tconstructor(...args) {\n\t\t\tlet parent;\n\t\t\tif (args[0] instanceof Group) {\n\t\t\t\tparent = args[0];\n\t\t\t\targs = args.slice(1);\n\t\t\t}\n\t\t\tsuper(...args);\n\t\t\tthis.idNum = 0;\n\t\t\tthis.p = pInst;\n\n\t\t\t// if all sprites doesn't exist yet,\n\t\t\t// this group is the allSprites group\n\t\t\tif (!this.p.allSprites) this._isAllSpritesGroup = true;\n\n\t\t\tif (!this._isAllSpritesGroup) this.parent = 0;\n\t\t\tif (parent) this.parent = parent.idNum;\n\n\t\t\t/**\n\t\t\t * Keys are the animation label, values are SpriteAnimation objects.\n\t\t\t *\n\t\t\t * @property animations\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tthis.animations = {};\n\n\t\t\t/**\n\t\t\t * Contains all the collision callback functions for this group\n\t\t\t * when it comes in contact with other sprites or groups.\n\t\t\t * @property _collides\n\t\t\t */\n\t\t\tthis._collides = {};\n\t\t\tthis._colliding = {};\n\t\t\tthis._collided = {};\n\n\t\t\tthis._overlap = {};\n\t\t\t/**\n\t\t\t * Contains all the overlap callback functions for this group\n\t\t\t * when it comes in contact with other sprites or groups.\n\t\t\t * @property _overlaps\n\t\t\t */\n\t\t\tthis._overlaps = {};\n\t\t\tthis._overlapping = {};\n\t\t\tthis._overlapped = {};\n\n\t\t\tthis._collisions = new Map();\n\t\t\tthis._overlappers = new Map();\n\n\t\t\t// mainly for internal use\n\t\t\t// autoCull as a property of allSprites only refers to the default allSprites cull\n\t\t\t// in the post draw function, if the user calls cull on allSprites it should work\n\t\t\t// for any other group made by users autoCull affects whether cull removes sprites or not\n\t\t\t// by default for allSprites it is set to true, for all other groups it is undefined\n\t\t\tthis.autoCull;\n\n\t\t\tif (this.p.world) {\n\t\t\t\tthis.idNum = this.p.world.groupsCreated;\n\t\t\t\tthis.p.world.groups[this.idNum] = this;\n\t\t\t\tthis.p.world.groupsCreated++;\n\t\t\t}\n\n\t\t\tlet _this = this;\n\n\t\t\tclass GroupSprite extends Sprite {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper(_this, ...arguments);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.Sprite = GroupSprite;\n\n\t\t\tclass SubGroup extends Group {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper(_this, ...arguments);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.Group = SubGroup;\n\n\t\t\tthis.mouse = {\n\t\t\t\tpresses: null,\n\t\t\t\tpressing: null,\n\t\t\t\tpressed: null,\n\t\t\t\tholds: null,\n\t\t\t\tholding: null,\n\t\t\t\theld: null,\n\t\t\t\treleased: null,\n\t\t\t\thovers: null,\n\t\t\t\thovering: null,\n\t\t\t\thovered: null\n\t\t\t};\n\t\t\tfor (let state in this.mouse) {\n\t\t\t\tthis.mouse[state] = function (inp) {\n\t\t\t\t\tfor (let s of _this) {\n\t\t\t\t\t\tif (s.mouse[state](inp)) return true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tlet props = [...spriteProps, 'spriteSheet'];\n\t\t\tfor (let prop of props) {\n\t\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tlet val = _this['_' + prop];\n\t\t\t\t\t\tlet i = _this.length - 1;\n\t\t\t\t\t\tif (val === undefined && this.p.world && !_this._isAllSpritesGroup) {\n\t\t\t\t\t\t\tlet parent = this.p.world.groups[_this.parent];\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tval = parent[prop];\n\t\t\t\t\t\t\t\ti = parent.length - 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn val;\n\t\t\t\t\t},\n\t\t\t\t\tset(val) {\n\t\t\t\t\t\t_this['_' + prop] = val;\n\n\t\t\t\t\t\t// change the prop in all the sprite of this group\n\t\t\t\t\t\tfor (let i = 0; i < _this.length; i++) {\n\t\t\t\t\t\t\tlet s = _this[i];\n\t\t\t\t\t\t\tlet v = val;\n\t\t\t\t\t\t\tif (typeof val == 'function') v = val(i);\n\t\t\t\t\t\t\ts[prop] = v;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.vel = {};\n\t\t\tthis.mirror = {};\n\n\t\t\tlet objProps = { vel: ['x', 'y'], mirror: ['x', 'y'] };\n\t\t\tfor (let objProp in objProps) {\n\t\t\t\tfor (let prop of objProps[objProp]) {\n\t\t\t\t\tObject.defineProperty(this[objProp], prop, {\n\t\t\t\t\t\tget() {\n\t\t\t\t\t\t\tlet val = _this[objProp]['_' + prop];\n\t\t\t\t\t\t\tlet i = _this.length - 1;\n\t\t\t\t\t\t\tif (val === undefined && _this.p.world && !_this._isAllSpritesGroup) {\n\t\t\t\t\t\t\t\tlet parent = _this.p.world.groups[_this.parent];\n\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\tval = parent[objProp][prop];\n\t\t\t\t\t\t\t\t\ti = parent.length - 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset(val) {\n\t\t\t\t\t\t\t_this[objProp]['_' + prop] = val;\n\n\t\t\t\t\t\t\t// change the prop in all the sprite of this group\n\t\t\t\t\t\t\tfor (let i = 0; i < _this.length; i++) {\n\t\t\t\t\t\t\t\tlet s = _this[i];\n\t\t\t\t\t\t\t\tlet v = val;\n\t\t\t\t\t\t\t\tif (typeof val == 'function') v = val(i);\n\t\t\t\t\t\t\t\ts[objProp][prop] = v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.orbitAngle = 0;\n\t\t}\n\n\t\t/**\n\t\t * Reference to the current animation.\n\t\t *\n\t\t * @property ani\n\t\t * @type {SpriteAnimation}\n\t\t */\n\t\tget ani() {\n\t\t\treturn this._animation;\n\t\t}\n\n\t\tget animation() {\n\t\t\treturn this._animation;\n\t\t}\n\n\t\tget anis() {\n\t\t\treturn this.animations;\n\t\t}\n\n\t\tset amount(val) {\n\t\t\tlet diff = val - this.length;\n\t\t\tlet shouldAdd = diff > 0;\n\t\t\tdiff = Math.abs(diff);\n\t\t\tfor (let i = 0; i < diff; i++) {\n\t\t\t\tif (shouldAdd) this.add(new this.Sprite());\n\t\t\t\telse this[this.length - 1].remove();\n\t\t\t}\n\t\t}\n\n\t\tresetCentroid() {\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\t\t\tfor (let s of this) {\n\t\t\t\tx += s.x;\n\t\t\t\ty += s.y;\n\t\t\t}\n\t\t\tthis.centroid = { x: x / this.length, y: y / this.length };\n\t\t\treturn this.centroid;\n\t\t}\n\n\t\tresetDistancesFromCentroid() {\n\t\t\tfor (let s of this) {\n\t\t\t\ts.distCentroid = {\n\t\t\t\t\tx: s.x - this.centroid.x,\n\t\t\t\t\ty: s.y - this.centroid.y\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tsnap(o, dist) {\n\t\t\tdist ??= 1 || this.tileSize * 0.1;\n\t\t\tfor (let s of this) {\n\t\t\t\ts.snap(o, dist);\n\t\t\t}\n\t\t}\n\n\t\t_ensureCollide(target, callback) {\n\t\t\tif (!(target instanceof Sprite) && !(target instanceof Group)) {\n\t\t\t\tthrow new Error('collide target must be a sprite or a group');\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @method collide\n\t\t * @deprecated use collides instead\n\t\t */\n\t\tcollide(target, callback) {\n\t\t\treturn this.collides(target, callback);\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the group collides with the\n\t\t * target sprite or group.\n\t\t *\n\t\t * Custom collision event handling can be done by using this function\n\t\t * in an if statement or adding a callback as the second parameter.\n\t\t *\n\t\t * @method collides\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t */\n\t\tcollides(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._collides[target] = callback || true;\n\t\t\treturn this._collisions.get(target) == 1;\n\t\t}\n\n\t\t/**\n\t\t * Returns a truthy value while the group is colliding with the\n\t\t * target sprite or group. The value is the number of frames that\n\t\t * the group has been colliding with the target.\n\t\t *\n\t\t * @method colliding\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Number} frames\n\t\t */\n\t\tcolliding(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._colliding[target] = callback || true;\n\t\t\tlet val = this._collisions.get(target);\n\t\t\treturn val > 0 ? val : 0;\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the group no longer overlaps\n\t\t * with the target sprite or group.\n\t\t *\n\t\t * @method collided\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Boolean}\n\t\t */\n\t\tcollided(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._collided[target] = callback || true;\n\t\t\treturn this._collisions.get(target) == -1;\n\t\t}\n\n\t\t// TODO\n\t\t// displaces(target, callback) {}\n\n\t\t_ensureOverlap(target, callback) {\n\t\t\tif (!(target instanceof Sprite) && !(target instanceof Group)) {\n\t\t\t\tthrow new Error('collide target must be a sprite or a group');\n\t\t\t}\n\t\t\tif (!this._hasOverlaps) {\n\t\t\t\tfor (let s of this) {\n\t\t\t\t\tif (!s._hasOverlaps) s._createSensors();\n\t\t\t\t}\n\t\t\t\tthis._hasOverlaps = true;\n\t\t\t}\n\t\t\tif (target instanceof Sprite) {\n\t\t\t\tif (!target._hasOverlaps) target._createSensors();\n\t\t\t} else if (target instanceof Group) {\n\t\t\t\tif (!target._hasOverlaps) {\n\t\t\t\t\tfor (let s of target) {\n\t\t\t\t\t\tif (!s._hasOverlaps) s._createSensors();\n\t\t\t\t\t}\n\t\t\t\t\ttarget._hasOverlaps = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._overlap[target] = true;\n\t\t}\n\n\t\t/**\n\t\t * @method overlap\n\t\t * @deprecated use overlaps instead\n\t\t */\n\t\toverlap(target, callback) {\n\t\t\treturn this.overlaps(target, callback);\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the group overlaps with the\n\t\t * target sprite or group.\n\t\t *\n\t\t * Custom overlap event handling can be done by using this function\n\t\t * in an if statement or adding a callback as the second parameter.\n\t\t *\n\t\t * @method overlaps\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t */\n\t\toverlaps(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlaps[target] = callback || true;\n\t\t\treturn this._overlappers.get(target) == 1;\n\t\t}\n\n\t\t/**\n\t\t * Returns a truthy value while the group is overlapping with the\n\t\t * target sprite or group. The value returned is the number of\n\t\t * frames the group has been overlapping with the target.\n\t\t *\n\t\t * @method overlapping\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Number} frames\n\t\t */\n\t\toverlapping(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlapping[target] = callback || true;\n\t\t\tlet val = this._overlappers.get(target);\n\t\t\treturn val > 0 ? val : 0;\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the group no longer overlaps\n\t\t * with the target sprite or group.\n\t\t *\n\t\t * @method overlapped\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Boolean}\n\t\t */\n\t\toverlapped(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlapped[target] = callback || true;\n\t\t\treturn this._overlappers.get(target) == -1;\n\t\t}\n\n\t\t/**\n\t\t * @method move\n\t\t */\n\t\tmove(x, y, speed) {\n\t\t\tlet centroid = this.centroid;\n\t\t\tlet movements = [];\n\t\t\tfor (let s of this) {\n\t\t\t\tlet dest = {\n\t\t\t\t\tx: s.x - centroid.x + x,\n\t\t\t\t\ty: s.y - centroid.y + y\n\t\t\t\t};\n\t\t\t\tmovements.push(s.move(dest.x, dest.y, speed));\n\t\t\t}\n\t\t\treturn Promise.all(movements);\n\t\t}\n\n\t\t/**\n\t\t * @method moveTowards\n\t\t */\n\t\tmoveTowards(x, y, tracking) {\n\t\t\tif (typeof x != 'number') {\n\t\t\t\ttracking = y;\n\t\t\t\ty = x.y;\n\t\t\t\tx = x.x;\n\t\t\t}\n\t\t\tif (x === undefined && y === undefined) return;\n\t\t\tlet centroid = this.resetCentroid();\n\t\t\tfor (let s of this) {\n\t\t\t\tif (s.distCentroid === undefined) this.resetDistancesFromCentroid();\n\t\t\t\tlet dest = {\n\t\t\t\t\tx: s.distCentroid.x + x,\n\t\t\t\t\ty: s.distCentroid.y + y\n\t\t\t\t};\n\t\t\t\ts.moveTowards(dest.x, dest.y, tracking);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @method moveAway\n\t\t */\n\t\tmoveAway(x, y, tracking) {\n\t\t\tif (typeof x != 'number') {\n\t\t\t\ttracking = y;\n\t\t\t\ty = x.y;\n\t\t\t\tx = x.x;\n\t\t\t}\n\t\t\tif (x === undefined && y === undefined) return;\n\t\t\tlet centroid = this.resetCentroid();\n\t\t\tfor (let s of this) {\n\t\t\t\tif (s.distCentroid === undefined) this.resetDistancesFromCentroid();\n\t\t\t\tlet dest = {\n\t\t\t\t\tx: s.distCentroid.x + x,\n\t\t\t\t\ty: s.distCentroid.y + y\n\t\t\t\t};\n\t\t\t\ts.moveAway(dest.x, dest.y, tracking);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Rotates the group around its centroid.\n\t\t *\n\t\t * @method orbit\n\t\t * @param {Number} amount Amount of rotation\n\t\t */\n\t\torbit(amount) {\n\t\t\tif (!this.centroid) this.resetCentroid();\n\t\t\tthis.orbitAngle += amount;\n\t\t\tlet angle = this.orbitAngle;\n\t\t\tfor (let s of this) {\n\t\t\t\tif (s.distCentroid === undefined) this.resetDistancesFromCentroid();\n\t\t\t\tlet x = s.distCentroid.x;\n\t\t\t\tlet y = s.distCentroid.y;\n\t\t\t\tlet x2 = x * this.p.cos(angle) - y * this.p.sin(angle);\n\t\t\t\tlet y2 = x * this.p.sin(angle) + y * this.p.cos(angle);\n\t\t\t\tx2 += this.centroid.x;\n\t\t\t\ty2 += this.centroid.y;\n\t\t\t\ts.vel.x = (x2 - s.x) * 0.1 * s.tileSize;\n\t\t\t\ts.vel.y = (y2 - s.y) * 0.1 * s.tileSize;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Gets the member at index i.\n\t\t *\n\t\t * @deprecated\n\t\t * @method get\n\t\t * @param {Number} i The index of the object to retrieve\n\t\t */\n\t\tget(i) {\n\t\t\treturn this[i];\n\t\t}\n\n\t\t/**\n\t\t * Checks if the group contains a sprite.\n\t\t *\n\t\t * @method contains\n\t\t * @param {Sprite} sprite The sprite to search\n\t\t * @return {Number} Index or -1 if not found\n\t\t */\n\t\tcontains(sprite) {\n\t\t\treturn this.indexOf(sprite) > -1;\n\t\t}\n\n\t\t/**\n\t\t * Adds a sprite to the group. Returns true if the sprite was added\n\t\t * because it was not already in the group.\n\t\t *\n\t\t * @method push\n\t\t * @param {Sprite} s The sprite to be added\n\t\t */\n\t\tpush(s) {\n\t\t\tif (!(s instanceof Sprite)) {\n\t\t\t\tthrow new Error('you can only add sprites to a group');\n\t\t\t}\n\n\t\t\tif (this.indexOf(s) == -1) {\n\t\t\t\tsuper.push(s);\n\t\t\t\tif (this.parent) this.p.world.groups[this.parent].push(s);\n\t\t\t\ts.groups.push(this);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Adds a sprite to the group. Returns true if the sprite was added\n\t\t * because it was not already in the group.\n\t\t *\n\t\t * @method add\n\t\t * @param {Sprite} s The sprite to be added\n\t\t */\n\t\tadd(s) {\n\t\t\tthis.push(s);\n\t\t}\n\n\t\t/**\n\t\t * Same as group.length\n\t\t *\n\t\t * @method size\n\t\t */\n\t\tsize() {\n\t\t\treturn this.length;\n\t\t}\n\n\t\t/**\n\t\t * Returns the group's unique identifier.\n\t\t *\n\t\t * @returns {String} groupID\n\t\t */\n\t\ttoString() {\n\t\t\treturn 'g' + this.idNum;\n\t\t}\n\n\t\t/**\n\t\t * Remove sprites that go outside the given culling boundary\n\t\t * relative to the camera.\n\t\t *\n\t\t * @method cull\n\t\t * @param {Number} top|size The distance that sprites can move below the p5.js canvas before they are removed. *OR* The distance sprites can travel outside the screen on all sides before they get removed.\n\t\t * @param {Number} bottom|cb The distance that sprites can move below the p5.js canvas before they are removed.\n\t\t * @param {Number} [left] The distance that sprites can move beyond the left side of the p5.js canvas before they are removed.\n\t\t * @param {Number} [right] The distance that sprites can move beyond the right side of the p5.js canvas before they are removed.\n\t\t * @param {Function} [cb(sprite)] The callback is given the sprite that\n\t\t * passed the cull boundary, if no callback is given the sprite is\n\t\t * removed by default\n\t\t */\n\t\tcull(top, bottom, left, right, cb) {\n\t\t\tif (left === undefined) {\n\t\t\t\tlet size = top;\n\t\t\t\tcb = bottom;\n\t\t\t\ttop = bottom = left = right = size;\n\t\t\t}\n\t\t\tif (isNaN(top) || isNaN(bottom) || isNaN(left) || isNaN(right)) {\n\t\t\t\tthrow new TypeError('The culling boundary must be defined with numbers');\n\t\t\t}\n\t\t\tif (cb && typeof cb != 'function') {\n\t\t\t\tthrow new TypeError('The callback to group.cull must be a function');\n\t\t\t}\n\n\t\t\tlet cx = this.p.camera.x - this.p.world.hw / this.p.camera.zoom;\n\t\t\tlet cy = this.p.camera.y - this.p.world.hh / this.p.camera.zoom;\n\n\t\t\tlet minX = -left + cx;\n\t\t\tlet minY = -top + cy;\n\t\t\tlet maxX = this.p.width + right + cx;\n\t\t\tlet maxY = this.p.height + bottom + cy;\n\n\t\t\tfor (let s of this) {\n\t\t\t\tif (s.x < minX || s.y < minY || s.x > maxX || s.y > maxY) {\n\t\t\t\t\tif (cb) cb(s);\n\t\t\t\t\telse s.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * If no input is given all sprites in the group are removed.\n\t\t *\n\t\t * If a sprite or index is given, that sprite is removed from this\n\t\t * group and any group this group inherits from except for the\n\t\t * allSprites group.\n\t\t *\n\t\t * @method remove\n\t\t * @param {Sprite} item The sprite to be removed\n\t\t * @return {Boolean} true if sprite was found and removed\n\t\t */\n\t\tremove(item) {\n\t\t\tif (item === undefined) {\n\t\t\t\twhile (this.length > 0) {\n\t\t\t\t\tthis[0].remove();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet idx;\n\t\t\tif (typeof item == 'number') {\n\t\t\t\tidx = item;\n\t\t\t} else {\n\t\t\t\tfor (let i = this.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (this[i] === item) {\n\t\t\t\t\t\tidx = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (idx !== undefined) {\n\t\t\t\tlet removed = this[idx];\n\t\t\t\tlet gIdx = this[idx].groups.findIndex((g) => g.idNum == this.idNum);\n\t\t\t\tthis[idx].groups.splice(gIdx, 1);\n\t\t\t\tthis.splice(idx, 1);\n\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t\tthrow new Error('Sprite not found in group');\n\t\t}\n\n\t\t/**\n\t\t * Removes all sprites from the group and destroys the group.\n\t\t *\n\t\t * @method removeAll\n\t\t */\n\t\tremoveAll() {\n\t\t\tthis.remove();\n\t\t}\n\n\t\t/**\n\t\t * Returns the highest depth in a group\n\t\t *\n\t\t * @method maxDepth\n\t\t * @return {Number} The depth of the sprite drawn on the top\n\t\t */\n\t\tmaxDepth() {\n\t\t\tif (this.length == 0) return 0;\n\t\t\tif (this.length == 1 && this[0].layer === undefined) return 0;\n\t\t\tlet max = this[0].layer;\n\t\t\tfor (let s of this) {\n\t\t\t\tif (s.layer > max) max = s.layer;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\n\t\t/**\n\t\t * Returns the lowest depth in a group\n\t\t *\n\t\t * @method minDepth\n\t\t * @return {Number} The depth of the sprite drawn on the bottom\n\t\t */\n\t\tminDepth() {\n\t\t\tif (this.length === 0) {\n\t\t\t\treturn 99999;\n\t\t\t}\n\n\t\t\treturn this.reduce(function (minDepth, sprite) {\n\t\t\t\treturn Math.min(minDepth, sprite.depth);\n\t\t\t}, Infinity);\n\t\t}\n\n\t\tdraw() {\n\t\t\tlet g = [...this];\n\t\t\tg.sort((a, b) => a.layer - b.layer);\n\t\t\tfor (let i = 0; i < g.length; i++) {\n\t\t\t\tlet sprite = g[i];\n\t\t\t\tif (sprite.life-- < 0) {\n\t\t\t\t\tsprite.remove();\n\t\t\t\t\tg.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (sprite.visible) sprite.draw();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds an animation to the sprite. Use this function in the preload p5.js\n\t * function. You don't need to name the animation if the sprite will only\n\t * use one animation. See SpriteAnimation for more information.\n\t *\n\t * @example\n\t * sprite.addAni(name, animation);\n\t * sprite.addAni(name, frame1, frame2, frame3...);\n\t * sprite.addAni(name, atlas);\n\t *\n\t * @method addAni\n\t * @param {String} name SpriteAnimation identifier\n\t * @param {SpriteAnimation} animation The preloaded animation\n\t */\n\tSprite.prototype.addAnimation =\n\t\tGroup.prototype.addAnimation =\n\t\tSprite.prototype.addAni =\n\t\tGroup.prototype.addAni =\n\t\tSprite.prototype.addImage =\n\t\tGroup.prototype.addImage =\n\t\tSprite.prototype.addImg =\n\t\tGroup.prototype.addImg =\n\t\t\tfunction () {\n\t\t\t\tlet args = [...arguments];\n\t\t\t\tlet name, ani;\n\t\t\t\tif (args[0] instanceof SpriteAnimation) {\n\t\t\t\t\tani = args[0];\n\t\t\t\t\tname = ani.name || 'default';\n\t\t\t\t\tani.name = name;\n\t\t\t\t} else if (args[1] instanceof SpriteAnimation) {\n\t\t\t\t\tname = args[0];\n\t\t\t\t\tani = args[1];\n\t\t\t\t\tani.name = name;\n\t\t\t\t} else {\n\t\t\t\t\tani = new SpriteAnimation(this, ...args);\n\t\t\t\t\tname = ani.name;\n\t\t\t\t}\n\t\t\t\tthis.animations[name] = ani;\n\t\t\t\tthis._animation = ani;\n\t\t\t\t// TODO resize sprite collider to animation dimensions\n\t\t\t\t// if (this._isAllSpritesGroup) {\n\t\t\t\t// \tthis.w = ani.w;\n\t\t\t\t// \tthis.h = ani.h;\n\t\t\t\t// }\n\t\t\t\treturn ani;\n\t\t\t};\n\n\t/**\n\t * Add multiple animations\n\t *\n\t * @method addAnis\n\t */\n\tSprite.prototype.addAnis =\n\t\tGroup.prototype.addAnis =\n\t\tSprite.prototype.addAnimations =\n\t\tGroup.prototype.addAnimations =\n\t\tSprite.prototype.addImages =\n\t\tGroup.prototype.addImages =\n\t\tSprite.prototype.addImgs =\n\t\tGroup.prototype.addImgs =\n\t\t\tfunction () {\n\t\t\t\tlet args = arguments;\n\t\t\t\tlet atlases;\n\t\t\t\tif (args.length == 1) {\n\t\t\t\t\tatlases = args[0];\n\t\t\t\t} else {\n\t\t\t\t\tthis.spriteSheet = args[0];\n\t\t\t\t\tatlases = args[1];\n\t\t\t\t}\n\t\t\t\tfor (let name in atlases) {\n\t\t\t\t\tlet atlas = atlases[name];\n\t\t\t\t\tthis.addAni(name, atlas);\n\t\t\t\t}\n\t\t\t};\n\n\t/**\n\t * Look at the World reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/world.html\n\t *\n\t * @class World\n\t * @constructor\n\t */\n\tclass World extends pl.World {\n\t\tconstructor() {\n\t\t\tsuper(new pl.Vec2(0, 0), true);\n\t\t\tthis.p = pInst;\n\t\t\tthis.width = this.p.width;\n\t\t\tthis.height = this.p.height;\n\t\t\tthis._offset = { x: 0, y: 0 };\n\t\t\tlet _this = this;\n\t\t\tthis.offset = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn -_this._offset.x;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * @property offset.x\n\t\t\t\t */\n\t\t\t\tset x(val) {\n\t\t\t\t\t_this._offset.x = val;\n\t\t\t\t\t_this.resize();\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn -_this._offset.y;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * @property offset.y\n\t\t\t\t */\n\t\t\t\tset y(val) {\n\t\t\t\t\t_this._offset.y = val;\n\t\t\t\t\t_this.resize();\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.resize();\n\n\t\t\t/**\n\t\t\t * If false, animations that are stopped before they are completed,\n\t\t\t * typically by a call to sprite.changeAni, will restart at the\n\t\t\t * frame they were stopped at. If true, animations will always\n\t\t\t * start playing from frame 0 unless specified by the user in a\n\t\t\t * separate `anim.changeFrame` call.\n\t\t\t *\n\t\t\t * @property autoResetAnimations\n\t\t\t * @type {SpriteAnimation}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.autoResetAnimations = false;\n\n\t\t\tthis.palettes = this.p.world?.palettes || [\n\t\t\t\t{\n\t\t\t\t\t// a\n\t\t\t\t\tb: 'black',\n\t\t\t\t\tc: 'crimson',\n\t\t\t\t\td: 'dark blue',\n\t\t\t\t\t// e\n\t\t\t\t\tf: 'fuchsia',\n\t\t\t\t\tg: 'green',\n\t\t\t\t\th: 'hot pink',\n\t\t\t\t\ti: 'blue', // indigo\n\t\t\t\t\t// j\n\t\t\t\t\tk: 'black',\n\t\t\t\t\tl: 'lavender',\n\t\t\t\t\tm: 'magenta',\n\t\t\t\t\tn: 'brown',\n\t\t\t\t\to: 'orange',\n\t\t\t\t\tp: 'pink',\n\t\t\t\t\t// q\n\t\t\t\t\tr: 'red',\n\t\t\t\t\ts: 'sky blue',\n\t\t\t\t\tt: 'turquoise',\n\t\t\t\t\tu: 'blue',\n\t\t\t\t\tv: 'violet',\n\t\t\t\t\tw: 'white',\n\t\t\t\t\t// x\n\t\t\t\t\ty: 'yellow'\n\t\t\t\t\t// z\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tthis.groups = [this.p.allSprites];\n\t\t\tthis.groupsCreated = 1;\n\t\t\tthis.spritesCreated = 0;\n\t\t\tthis.contacts = [];\n\n\t\t\tthis.on('begin-contact', this._beginContact);\n\t\t\tthis.on('end-contact', this._endContact);\n\n\t\t\t/**\n\t\t\t * Gravity vector\n\t\t\t *\n\t\t\t * @property gravity\n\t\t\t */\n\t\t\tthis.gravity = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn _this.m_gravity.x;\n\t\t\t\t},\n\t\t\t\tset x(val) {\n\t\t\t\t\t_this.m_gravity.x = _this.p.round(val || 0);\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn _this.m_gravity.y;\n\t\t\t\t},\n\t\t\t\tset y(val) {\n\t\t\t\t\t_this.m_gravity.y = _this.p.round(val || 0);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tresize(w, h) {\n\t\t\tw ??= this.p.width;\n\t\t\th ??= this.p.height;\n\t\t\tthis.origin = {\n\t\t\t\tx: w * 0.5 + this.offset.x,\n\t\t\t\ty: h * 0.5 + this.offset.y\n\t\t\t};\n\t\t\tif (this.p.allSprites.tileSize != 1) {\n\t\t\t\tthis.origin.x -= this.p.allSprites.tileSize * 0.5;\n\t\t\t\tthis.origin.y -= this.p.allSprites.tileSize * 0.5;\n\t\t\t}\n\t\t\tthis.hw = w * 0.5;\n\t\t\tthis.hh = h * 0.5;\n\t\t\tthis.halfWidth = this.hw;\n\t\t\tthis.halfHeight = this.hh;\n\t\t}\n\n\t\t_beginContact(contact) {\n\t\t\t// Get both fixtures\n\t\t\tlet a = contact.m_fixtureA;\n\t\t\tlet b = contact.m_fixtureB;\n\t\t\tlet t = '_collisions';\n\t\t\tif (a.isSensor()) t = '_overlappers';\n\t\t\ta = a.m_body.sprite;\n\t\t\tb = b.m_body.sprite;\n\n\t\t\ta[t].set(b, 0);\n\t\t\tb[t].set(a, 0);\n\n\t\t\tfor (let g of b.groups) {\n\t\t\t\tg[t].set(a, g[t].get(a) || 0);\n\t\t\t\ta[t].set(g, a[t].get(g) || 0);\n\t\t\t}\n\n\t\t\tfor (let g of a.groups) {\n\t\t\t\tg[t].set(b, g[t].get(b) || 0);\n\t\t\t\tb[t].set(g, b[t].get(g) || 0);\n\t\t\t\tfor (let g2 of b.groups) {\n\t\t\t\t\tg[t].set(g2, g[t].get(g2) || 0);\n\t\t\t\t\tg2[t].set(g, g2[t].get(g) || 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_endContact(contact) {\n\t\t\tlet a = contact.m_fixtureA;\n\t\t\tlet b = contact.m_fixtureB;\n\t\t\tlet contactType = '_collisions';\n\t\t\tif (a.isSensor()) contactType = '_overlappers';\n\t\t\ta = a.m_body.sprite;\n\t\t\tb = b.m_body.sprite;\n\n\t\t\ta[contactType].set(b, -2);\n\t\t\tb[contactType].set(a, -2);\n\n\t\t\tfor (let g of b.groups) {\n\t\t\t\tlet inContact = false;\n\t\t\t\tfor (let s of g) {\n\t\t\t\t\tif (s[contactType].get(a) >= 0) {\n\t\t\t\t\t\tinContact = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!inContact) {\n\t\t\t\t\tg[contactType].set(a, -2);\n\t\t\t\t\ta[contactType].set(g, -2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let g of a.groups) {\n\t\t\t\tlet inContact = false;\n\t\t\t\tfor (let s of g) {\n\t\t\t\t\tif (s[contactType].get(b) >= 0) {\n\t\t\t\t\t\tinContact = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!inContact) {\n\t\t\t\t\tg[contactType].set(b, -2);\n\t\t\t\t\tb[contactType].set(g, -2);\n\t\t\t\t\tfor (let g2 of b.groups) {\n\t\t\t\t\t\tg[contactType].set(g2, -2);\n\t\t\t\t\t\tg2[contactType].set(g, -2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget autoCull() {\n\t\t\treturn this.p.allSprites.autoCull;\n\t\t}\n\n\t\tset autoCull(val) {\n\t\t\tthis.p.allSprites.autoCull = val;\n\t\t}\n\n\t\tget allowSleeping() {\n\t\t\treturn this.getAllowSleeping();\n\t\t}\n\n\t\tset allowSleeping(val) {\n\t\t\tthis.setAllowSleeping(val);\n\t\t}\n\t}\n\n\t/**\n\t * Look at the Camera reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/camera.html\n\t *\n\t * A camera facilitates scrolling and zooming for scenes extending beyond\n\t * the canvas. A camera has a position, a zoom factor, and the mouse\n\t * coordinates relative to the view.\n\t * The camera is automatically created on the first draw cycle.\n\t *\n\t * In p5.js terms the camera wraps the whole drawing cycle in a\n\t * transformation matrix but it can be disable anytime during the draw\n\t * cycle for example to draw interface elements in an absolute position.\n\t *\n\t * @class Camera\n\t * @constructor\n\t * @param {Number} x Initial x coordinate\n\t * @param {Number} y Initial y coordinate\n\t * @param {Number} zoom magnification\n\t **/\n\tclass Camera {\n\t\tconstructor(x, y, zoom) {\n\t\t\tthis.p = pInst;\n\t\t\tlet _this = this;\n\n\t\t\t/**\n\t\t\t * Camera position.\n\t\t\t *\n\t\t\t * @deprecated\n\t\t\t * @property position\n\t\t\t */\n\t\t\tthis.position = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn _this.x;\n\t\t\t\t},\n\t\t\t\tset x(val) {\n\t\t\t\t\t_this.x = val;\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn _this.y;\n\t\t\t\t},\n\t\t\t\tset y(val) {\n\t\t\t\t\t_this.y = val;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._pos = { x: 0, y: 0 };\n\n\t\t\t/**\n\t\t\t * Camera zoom.\n\t\t\t *\n\t\t\t * A scale of 1 will be the normal size. Setting it to 2 will\n\t\t\t * make everything twice the size. .5 will make everything half\n\t\t\t * size.\n\t\t\t *\n\t\t\t * @property zoom\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\tthis.zoom = zoom || 1;\n\n\t\t\t/**\n\t\t\t * Get the translated mouse position relative to the camera view.\n\t\t\t * Offsetting and scaling the canvas will not change the sprites' position\n\t\t\t * nor the mouseX and mouseY variables. Use this property to read the mouse\n\t\t\t * position if the camera moved or zoomed.\n\t\t\t *\n\t\t\t * @property mouse\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tthis.mouse = {\n\t\t\t\tx: this.p.mouseX,\n\t\t\t\ty: this.p.mouseY\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * True if the camera is active.\n\t\t\t * Read only property. Use the methods Camera.on() and Camera.off()\n\t\t\t * to enable or disable the camera.\n\t\t\t *\n\t\t\t * @property active\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis.active = false;\n\n\t\t\tthis.bound = {\n\t\t\t\tmin: { x: 0, y: 0 },\n\t\t\t\tmax: { x: 0, y: 0 }\n\t\t\t};\n\n\t\t\tif (x) this.x = x;\n\t\t\tif (y) this.y = y;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._pos.x;\n\t\t}\n\n\t\tset x(val) {\n\t\t\tthis._pos.x = val;\n\t\t\tthis.bound.min.x = this.x - this.p.world.hw / this.zoom - 100;\n\t\t\tthis.bound.max.x = this.x + this.p.world.hw / this.zoom + 100;\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._pos.y;\n\t\t}\n\n\t\tset y(val) {\n\t\t\tthis._pos.y = val;\n\t\t\tthis.bound.min.y = this.y - this.p.world.hh / this.zoom - 100;\n\t\t\tthis.bound.max.y = this.y + this.p.world.hh / this.zoom + 100;\n\t\t}\n\n\t\t/**\n\t\t * Activates the camera.\n\t\t * The canvas will be drawn according to the camera position and scale until\n\t\t * camera.off() is called\n\t\t *\n\t\t * @method on\n\t\t */\n\t\ton() {\n\t\t\tif (!this.active) {\n\t\t\t\tthis.p.push();\n\t\t\t\tthis.p.scale(this.zoom);\n\t\t\t\tthis.p.translate(-this.x + this.p.world.hw / this.zoom, -this.y + this.p.world.hh / this.zoom);\n\t\t\t\tthis.active = true;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Deactivates the camera.\n\t\t * The canvas will be drawn normally, ignoring the camera's position\n\t\t * and scale until camera.on() is called\n\t\t *\n\t\t * @method off\n\t\t */\n\t\toff() {\n\t\t\tif (this.active) {\n\t\t\t\tthis.p.pop();\n\t\t\t\tthis.active = false;\n\t\t\t}\n\t\t}\n\t} //end camera class\n\n\t/**\n\t *\n\t * @private\n\t * @param {String} type \"collide\" or \"overlap\"\n\t * @param {Sprite} s0\n\t * @param {Sprite} s1\n\t * @returns contact cb if one can be found between the two sprites\n\t */\n\tfunction _findContactCB(type, s0, s1) {\n\t\tlet cb = s0[type][s1];\n\t\tif (cb) return cb;\n\n\t\tlet s1IsSprite = s1 instanceof Sprite;\n\n\t\tif (s1IsSprite) {\n\t\t\tfor (let g1 of s1.groups) {\n\t\t\t\tcb = s0[type][g1];\n\t\t\t\tif (cb) return cb;\n\t\t\t}\n\t\t}\n\n\t\tif (s0 instanceof Sprite) {\n\t\t\tfor (let g0 of s0.groups) {\n\t\t\t\tcb = g0[type][s1];\n\t\t\t\tif (cb) return cb;\n\t\t\t\tif (s1IsSprite) {\n\t\t\t\t\tfor (let g1 of s1.groups) {\n\t\t\t\t\t\tcb = g0[type][g1];\n\t\t\t\t\t\tif (cb) return cb;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * This planck function should've be named \"shouldContact\", because that's what\n\t * it actually decides.\n\t */\n\tpl.Fixture.prototype.shouldCollide = function (that) {\n\t\t// should this and that produce a contact event?\n\t\tlet a = this;\n\t\tlet b = that;\n\n\t\t// sensors overlap (returning true doesn't mean they will collide it means\n\t\t// they're included in begin contact and end contact events)\n\t\tif (a.isSensor() && b.isSensor()) return true;\n\t\t// ignore contact events between a sensor and a non-sensor\n\t\tif (a.isSensor() || b.isSensor()) return false;\n\t\t// else test if the two non-sensor colliders should overlap\n\n\t\ta = a.m_body.sprite;\n\t\tb = b.m_body.sprite;\n\n\t\t// if `a` has an overlap enabled with `b` their colliders should not produce a\n\t\t// contact event, the overlap contact event is between their sensors\n\t\tlet shouldOverlap = _findContactCB('_overlap', a, b);\n\t\tif (!shouldOverlap) shouldOverlap = _findContactCB('_overlap', b, a);\n\t\tif (shouldOverlap) return false;\n\t\treturn true;\n\t};\n\n\t/**\n\t * Look at the Tiles reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/tiles.html\n\t *\n\t * @class Tiles\n\t * @constructor\n\t * @param {String} tiles\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t */\n\tclass Tiles {\n\t\tconstructor(tiles, x, y, w, h) {\n\t\t\tif (typeof tiles == 'string') tiles = tiles.split('\\n');\n\n\t\t\tx ??= 0;\n\t\t\ty ??= 0;\n\t\t\tw ??= 1;\n\t\t\th ??= 1;\n\n\t\t\tfor (let row = 0; row < tiles.length; row++) {\n\t\t\t\tfor (let col = 0; col < tiles[row].length; col++) {\n\t\t\t\t\tlet t = tiles[row][col];\n\t\t\t\t\tif (t == ' ' || t == '.') continue;\n\t\t\t\t\tlet ani, g;\n\t\t\t\t\tfor (g of pInst.world.groups) {\n\t\t\t\t\t\tani = g.animations[t];\n\t\t\t\t\t\tif (ani) break;\n\t\t\t\t\t}\n\t\t\t\t\tif (ani) {\n\t\t\t\t\t\tnew g.Sprite(ani, x + col * w, y + row * h);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet wasFound = false;\n\t\t\t\t\tfor (g of pInst.world.groups) {\n\t\t\t\t\t\tif (g.tile == t) {\n\t\t\t\t\t\t\twasFound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (wasFound) {\n\t\t\t\t\t\tnew g.Sprite(x + col * w, y + row * h);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet s;\n\t\t\t\t\tfor (s of pInst.allSprites) {\n\t\t\t\t\t\tif (s.tile == t) {\n\t\t\t\t\t\t\twasFound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (wasFound) {\n\t\t\t\t\t\ts.x = x + col * w;\n\t\t\t\t\t\ts.y = y + row * h;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.error('Tile not found: ' + t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tthis.Tiles = Tiles;\n\n\t/**\n\t * Look at the p5.play reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/sprite.html\n\t *\n\t * @class p5.play\n\t */\n\n\t/**\n\t * Equivalent to `new Tiles`\n\t *\n\t * @method createTiles\n\t * @param {String|Array} tiles String or array of strings\n\t */\n\tp5.prototype.createTiles = function (tiles, x, y, w, h) {\n\t\treturn new Tiles(tiles, x, y, w, h);\n\t};\n\n\t/**\n\t * This function is automatically called at the end of the p5.js draw\n\t * loop, unless it was already called in the draw loop.\n\t *\n\t * @method updateSprites\n\t * @param {Number} timeStep\n\t * @param {Number} velocityIterations\n\t * @param {Number} positionIterations\n\t */\n\tp5.prototype.updateSprites = function (timeStep, velocityIterations, positionIterations) {\n\t\tfor (let s of this.allSprites) {\n\t\t\ts.previousPosition.x = s.x;\n\t\t\ts.previousPosition.y = s.y;\n\t\t}\n\n\t\t// 2nd and 3rd arguments are velocity and position iterations\n\t\tthis.world.step(timeStep || 1 / 60, velocityIterations || 8, positionIterations || 3);\n\n\t\tfor (let s of this.allSprites) {\n\t\t\ts.update();\n\t\t}\n\t\tthis.p5play.autoUpdateSprites = false;\n\t};\n\n\t/**\n\t * Returns the sprites at a position.\n\t *\n\t * @method getSpriteAt\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @returns\n\t */\n\tp5.prototype.getSpritesAt = function (x, y, group, cameraActiveWhenDrawn) {\n\t\tcameraActiveWhenDrawn ??= true;\n\t\tconst convertedPoint = new pl.Vec2(x / plScale, y / plScale);\n\t\tconst aabb = new pl.AABB();\n\t\taabb.lowerBound = new pl.Vec2(convertedPoint.x - 0.001, convertedPoint.y - 0.001);\n\t\taabb.upperBound = new pl.Vec2(convertedPoint.x + 0.001, convertedPoint.y + 0.001);\n\n\t\t// Query the world for overlapping shapes.\n\t\tlet fxts = [];\n\t\tpInst.world.queryAABB(aabb, (fxt) => {\n\t\t\tif (!fxt.getBody().isStatic()) {\n\t\t\t\tif (fxt.getShape().testPoint(fxt.getBody().getTransform(), convertedPoint)) {\n\t\t\t\t\tfxts.push(fxt);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tgroup ??= pInst.allSprites;\n\n\t\tlet sprites = [];\n\t\tif (fxts.length > 0) {\n\t\t\tfor (let s of group) {\n\t\t\t\tif (!s.body) continue;\n\t\t\t\tif (fxts.includes(s.body.m_fixtureList)) {\n\t\t\t\t\tif (s._cameraActiveWhenDrawn == cameraActiveWhenDrawn) sprites.push(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sprites;\n\t};\n\n\t/**\n\t * Returns the sprite at the top most layer position where\n\t * the mouse click occurs\n\t *\n\t * @method getSpriteAt\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @returns\n\t */\n\tp5.prototype.getSpriteAt = function (x, y, group) {\n\t\tlet sprites = p5.prototype.getSpritesAt(x, y, group);\n\t\tsprites.sort((a, b) => (a.layer - b.layer) * -1);\n\t\treturn sprites[0];\n\t};\n\n\t// TODO implement planck joints\n\t// the following code is from https://github.com/bobcgausa/cook-js\n\n\t// const debugDraw = (canvas, scale, world) => {\n\t// \tconst context = canvas.getContext('2d');\n\t// \t//context.fillStyle = '#DDD';\n\t// \t//context.fillRect(0, 0, canvas.width, canvas.height);\n\n\t// \t// Draw joints\n\t// \tfor (let j = world.m_jointList; j; j = j.m_next) {\n\t// \t\tcontext.lineWidth = 0.25;\n\t// \t\tcontext.strokeStyle = '#00F';\n\t// \t\tdrawJoint(context, scale, world, j);\n\t// \t}\n\t// };\n\n\t// const drawJoint = (context, scale, world, joint) => {\n\t// \tcontext.save();\n\t// \tcontext.scale(scale, scale);\n\t// \tcontext.lineWidth /= scale;\n\n\t// \tconst b1 = joint.m_bodyA;\n\t// \tconst b2 = joint.m_bodyB;\n\t// \tconst x1 = b1.getPosition();\n\t// \tconst x2 = b2.getPosition();\n\t// \tlet p1;\n\t// \tlet p2;\n\t// \tcontext.beginPath();\n\t// \tswitch (joint.m_type) {\n\t// \t\tcase 'distance-joint':\n\t// \t\tcase 'rope-joint':\n\t// \t\t\tcontext.moveTo(x1.x, x1.y);\n\t// \t\t\tcontext.lineTo(x2.x, x2.y);\n\t// \t\t\tbreak;\n\t// \t\tcase 'wheel-joint':\n\t// \t\tcase 'revolute-joint':\n\t// \t\t\tp1 = joint.m_localAnchorA;\n\t// \t\t\tp2 = joint.m_localAnchorB;\n\t// \t\t\tconst a = b2.getAngle();\n\t// \t\t\tconst v = new pl.Vec2(cos(a), sin(a));\n\t// \t\t\tcontext.moveTo(x2.x, x2.y);\n\t// \t\t\tcontext.lineTo(x2.x + v.x, x2.y + v.y);\n\t// \t\t\tbreak;\n\t// \t\tcase 'mouse-joint':\n\t// \t\tcase 'weld-joint':\n\t// \t\t\tp1 = joint.getAnchorA();\n\t// \t\t\tp2 = joint.getAnchorB();\n\t// \t\t\tcontext.moveTo(p1.x, p1.y);\n\t// \t\t\tcontext.lineTo(p2.x, p2.y);\n\t// \t\t\tbreak;\n\t// \t\tcase 'pulley-joint':\n\t// \t\t\tp1 = joint.m_groundAnchorA;\n\t// \t\t\tp2 = joint.m_groundAnchorB;\n\t// \t\t\tcontext.moveTo(p1.x, p1.y);\n\t// \t\t\tcontext.lineTo(x1.x, x1.y);\n\t// \t\t\tcontext.moveTo(p2.x, p2.y);\n\t// \t\t\tcontext.lineTo(x2.x, x2.y);\n\t// \t\t\tcontext.moveTo(p1.x, p1.y);\n\t// \t\t\tcontext.lineTo(p2.x, p2.y);\n\t// \t\t\tbreak;\n\t// \t\tdefault:\n\t// \t\t\tbreak;\n\t// \t}\n\t// \tcontext.closePath();\n\t// \tcontext.stroke();\n\t// \tcontext.restore();\n\t// };\n\n\t// function getAABB(body) {\n\t// \tconst aabb = new pl.AABB();\n\t// \tconst t = new pl.Transform();\n\t// \tt.setIdentity();\n\t// \tconst shapeAABB = new pl.AABB();\n\t// \taabb.lowerBound = new pl.Vec2(1000000, 1000000);\n\t// \taabb.upperBound = new pl.Vec2(-1000000, -1000000);\n\t// \tlet fixture = body.body.getFixtureList();\n\t// \twhile (fixture) {\n\t// \t\tconst shape = fixture.getShape();\n\t// \t\tconst childCount = shape.getChildCount(); //only for chains\n\t// \t\tfor (let child = 0; child < childCount; ++child) {\n\t// \t\t\tshape.computeAABB(shapeAABB, body.body.m_xf, child);\n\t// \t\t\tunionTo(aabb, shapeAABB);\n\t// \t\t}\n\t// \t\tfixture = fixture.getNext();\n\t// \t}\n\t// \taabb.lowerBound.mul(plScale); //upper left, offset from center\n\t// \taabb.upperBound.mul(plScale); //lower right\n\t// \treturn aabb;\n\t// }\n\n\t// function unionTo(a, b) {\n\t// \ta.lowerBound.x = min(a.lowerBound.x, b.lowerBound.x);\n\t// \ta.lowerBound.y = min(a.lowerBound.y, b.lowerBound.y);\n\t// \ta.upperBound.x = max(a.upperBound.x, b.upperBound.x);\n\t// \ta.upperBound.y = max(a.upperBound.y, b.upperBound.y);\n\t// }\n\n\t// The ray cast collects multiple hits along the ray in ALL mode.\n\t// The fixtures are not necessary reported in order.\n\t// We might not capture the closest fixture in ANY.\n\t// const rayCast = (() => {\n\t// \tlet def = {\n\t// \t\tANY: 0,\n\t// \t\tNEAREST: 2,\n\t// \t\tALL: 1\n\t// \t};\n\n\t// \tconst reset = (mode, ignore) => {\n\t// \t\tdef.points = [];\n\t// \t\tdef.normals = [];\n\t// \t\tdef.fixtures = [];\n\t// \t\tdef.fractions = [];\n\t// \t\tdef.ignore = ignore || [];\n\t// \t\tdef.mode = mode == undefined ? def.NEAREST : mode;\n\t// \t};\n\n\t// \tdef.rayCast = (point1, point2, mode, ignore) => {\n\t// \t\treset(mode, ignore);\n\t// \t\tworld.rayCast(scaleTo(point1), scaleTo(point2), def.callback);\n\t// \t};\n\n\t// \tdef.callback = (fixture, point, normal, fraction) => {\n\t// \t\tif (def.ignore.length > 0) for (let i = 0; i < def.ignore.length; i++) if (def.ignore[i] === fixture) return -1;\n\t// \t\tif (def.mode == def.NEAREST && def.points.length == 1) {\n\t// \t\t\tdef.fixtures[0] = fixture;\n\t// \t\t\tdef.points[0] = scaleFrom(point);\n\t// \t\t\tdef.normals[0] = normal;\n\t// \t\t\tdef.fractions[0] = fraction;\n\t// \t\t} else {\n\t// \t\t\tdef.fixtures.push(fixture);\n\t// \t\t\tdef.points.push(scaleFrom(point));\n\t// \t\t\tdef.normals.push(normal);\n\t// \t\t\tdef.fractions.push(fraction);\n\t// \t\t}\n\t// \t\t// -1 to ignore a fixture and continue\n\t// \t\t//  0 to terminate on first hit, or for searching\n\t// \t\t//  fraction seems to return nearest fixture as last entry in array\n\t// \t\t// +1 returns multiple but mix of low high or high low\n\t// \t\treturn def.mode == def.NEAREST ? fraction : def.mode;\n\t// \t};\n\n\t// \treturn def;\n\t// })();\n\n\t// const queryAABB = (() => {\n\t// \tlet def = {};\n\t// \tfunction reset(search) {\n\t// \t\tdef.fixtures = [];\n\t// \t\tdef.search = search || [];\n\t// \t}\n\n\t// \tdef.query = ({ lowerBound, upperBound }, search) => {\n\t// \t\treset(search);\n\t// \t\taabbc = new pl.AABB(lowerBound.mul(1 / plScale), upperBound.mul(1 / plScale));\n\t// \t\tworld.queryAABB(aabbc, def.callback);\n\t// \t};\n\n\t// \tdef.callback = (fixture) => {\n\t// \t\tdef.fixtures.push(fixture);\n\t// \t\treturn true;\n\t// \t};\n\n\t// \treturn def;\n\t// })();\n\n\t/**\n\t * Gets a color from a color palette\n\t *\n\t * @method colorPal\n\t * @param {String} c A single character, a key found in the color palette object.\n\t * @param {Number|Object} palette Can be a palette object or number index\n\t * in the system's palettes array.\n\t * @returns a hex color string for use by p5.js functions\n\t */\n\tp5.prototype.colorPal = (c, palette) => {\n\t\tif (c instanceof p5.Color) return c;\n\t\tif (typeof palette == 'number') {\n\t\t\tpalette = pInst.world.palettes[palette];\n\t\t}\n\t\tpalette ??= pInst.world.palettes[0];\n\t\tlet clr;\n\t\tif (palette) clr = palette[c];\n\t\t// if transparent\n\t\tif (clr === '' || c === '.' || c === ' ') {\n\t\t\treturn pInst.color(0, 0, 0, 0);\n\t\t}\n\t\treturn pInst.color(clr || c);\n\t};\n\n\t/**\n\t * Create pixel art images from a string. Each character in the\n\t * input string represents a color value defined in the palette\n\t * object.\n\t *\n\t * @method spriteArt\n\t * @param {String} txt Each character represents a pixel color value\n\t * @param {Number} scale The scale of the image\n\t * @param {Number|Object} palette Color palette\n\t * @returns A p5.js Image\n\t *\n\t * @example\n\t * let str = `\n\t * ...yyyy\n\t * .yybyybyy\n\t * yyyyyyyyyy\n\t * yybyyyybyy\n\t * .yybbbbyy\n\t * ...yyyy`;\n\t *\n\t * let img = spriteArt(str);\n\t */\n\tp5.prototype.spriteArt = (txt, scale, palette) => {\n\t\tscale ??= 1;\n\t\tif (typeof palette == 'number') {\n\t\t\tpalette = pInst.world.palettes[palette];\n\t\t}\n\t\tpalette ??= pInst.world.palettes[0];\n\t\tlet lines = txt; // accepts 2D arrays of characters\n\t\tif (typeof txt == 'string') {\n\t\t\ttxt = txt.trim();\n\t\t\ttxt = txt.replace(/\\r*\\n\\t+/g, '\\n'); // trim leading tabs\n\t\t\ttxt = txt.replace(/\\s+$/g, ''); // trim trailing whitespace\n\t\t\tlines = txt.split('\\n');\n\t\t}\n\t\tlet w = 0;\n\t\tfor (let line of lines) {\n\t\t\tif (line.length > w) w = line.length;\n\t\t}\n\t\tlet h = lines.length;\n\t\tlet img = pInst.createImage(w * scale, h * scale);\n\t\timg.loadPixels();\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tfor (let j = 0; j < lines[i].length; j++) {\n\t\t\t\tfor (let sX = 0; sX < scale; sX++) {\n\t\t\t\t\tfor (let sY = 0; sY < scale; sY++) {\n\t\t\t\t\t\tlet c = p5.prototype.colorPal(lines[i][j], palette);\n\t\t\t\t\t\timg.set(j * scale + sX, i * scale + sY, c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\timg.updatePixels();\n\t\tpInst.p5play.images.onLoad(img);\n\t\treturn img; // return the p5 graphics object\n\t};\n\n\t/**\n\t * Deprecated, use sprite.draw() instead.\n\t *\n\t * allSprites.draw() is run automatically at the end of the p5.js\n\t * draw loop, unless a sprite or group is drawn separately within the\n\t * draw loop.\n\t *\n\t * @deprecated\n\t * @method drawSprites\n\t */\n\tp5.prototype.drawSprite = function (sprite) {\n\t\tif (pInst.frameCount == 1) console.warn('drawSprite() is deprecated, use sprite.draw() instead.');\n\t\tsprite.draw();\n\t};\n\n\t/**\n\t * Deprecated, use group.draw() instead.\n\t *\n\t * allSprites.draw() is run automatically at the end of the p5.js\n\t * draw loop, unless a sprite or group is drawn separately within the\n\t * draw loop.\n\t *\n\t * @deprecated\n\t * @method drawSprites\n\t */\n\tp5.prototype.drawSprites = function (group) {\n\t\tif (pInst.frameCount == 1) console.warn('drawSprites() is deprecated, use group.draw() instead.');\n\t\tgroup ??= pInst.allSprites;\n\t\tgroup.draw();\n\t};\n\n\t/**\n\t * Creates a new sprite. Equivalent to `new Sprite()`\n\t *\n\t * @returns {Sprite}\n\t */\n\tp5.prototype.createSprite = function () {\n\t\treturn new Sprite(...arguments);\n\t};\n\n\t/**\n\t * Creates a new group of sprites. Equivalent to `new Group()`\n\t *\n\t * @returns {Group}\n\t */\n\tp5.prototype.createGroup = function () {\n\t\treturn new Group(...arguments);\n\t};\n\n\t/**\n\t * Loads an animation.\n\t * Use this in the preload p5.js function.\n\t *\n\t * @method loadAni\n\t * @returns {SpriteAnimation}\n\t */\n\tp5.prototype.loadAni = p5.prototype.loadAnimation = function () {\n\t\tlet args = [...arguments];\n\t\tlet parent, name;\n\n\t\tif (args[0] instanceof Sprite || args[0] instanceof Group) {\n\t\t\tparent = args[0];\n\t\t\targs = args.slice(1);\n\t\t}\n\n\t\tparent ??= this.allSprites;\n\t\tlet sa = parent.addAnimation(...args);\n\t\treturn sa;\n\t};\n\n\t/**\n\t * Displays an animation. Similar to the p5.js image function.\n\t *\n\t * @method animation\n\t * @param {SpriteAnimation} ani Animation to be displayed\n\t * @param {Number} x X coordinate\n\t * @param {Number} y Y coordinate\n\t *\n\t */\n\tp5.prototype.animation = function (ani, x, y, r, sX, sY) {\n\t\tif (ani.visible) ani.update();\n\t\tani.draw(x, y, r, sX, sY);\n\t};\n\n\t/**\n\t * Delay code execution in an async function for the specified time.\n\t *\n\t * @method delay\n\t * @param {Number} millisecond\n\t * @returns {Promise} A Promise that fulfills after the specified time.\n\t *\n\t * @example\n\t * async function startGame() {\n\t *   await delay(3000);\n\t * }\n\t */\n\tp5.prototype.delay = (millisecond) => {\n\t\t// if no input arg given, delay waits for the next possible animation frame\n\t\tif (!millisecond) {\n\t\t\treturn new Promise(requestAnimationFrame);\n\t\t} else {\n\t\t\t// else it wraps setTimeout in a Promise\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tsetTimeout(resolve, millisecond);\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Sleep for the specified time. Equivalent to the delay function.\n\t *\n\t * @method sleep\n\t * @param {Number} millisecond\n\t * @returns {Promise} A Promise that fulfills after the specified time.\n\t *\n\t * @example\n\t * async function startGame() {\n\t *   await sleep(3000);\n\t * }\n\t */\n\tp5.prototype.sleep = (millisecond) => {\n\t\treturn this.delay(millisecond);\n\t};\n\n\t/**\n\t * Awaitable function for playing sounds.\n\t *\n\t * @method play\n\t * @param {p5.Sound} sound\n\t * @returns {Promise}\n\t */\n\tp5.prototype.play = (sound) => {\n\t\tif (!sound.play) throw new Error('Tried to play a sound but the sound is not a sound object: ' + sound);\n\t\t// TODO reject if sound not found\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsound.play();\n\t\t\tsound.onended(() => resolve());\n\t\t});\n\t};\n\n\tlet userDisabledP5Errors = p5.disableFriendlyErrors;\n\tp5.disableFriendlyErrors = true;\n\n\tconst _createCanvas = this.createCanvas;\n\n\t/**\n\t * Equivalent to p5.js createCanvas function and `new Canvas()`\n\t *\n\t * In p5.play a canvas can be created with an aspect ratio in the\n\t * format `width:height`. For example `new Canvas('16:9')` will create\n\t * the largest possible canvas with a 16:9 aspect ratio.\n\t *\n\t * This function also disables the default keydown responses for\n\t * the arrow keys, slash, and spacebar. This is to prevent the\n\t * browser from scrolling the page when the user is playing a game using\n\t * common keyboard commands.\n\t *\n\t * @method createCanvas\n\t * @param {Number} width|ratio\n\t * @param {Number} height\n\t */\n\tthis.createCanvas = function () {\n\t\tlet args = [...arguments];\n\t\tif (typeof args[0] == 'string') {\n\t\t\tlet ratio = args[0].split(':');\n\t\t\tlet rW = Number(ratio[0]);\n\t\t\tlet rH = Number(ratio[1]);\n\n\t\t\tlet w = window.innerWidth;\n\t\t\tlet h = (window.innerWidth * rH) / rW;\n\t\t\tif (h > window.innerHeight) {\n\t\t\t\tw = (window.innerHeight * rW) / rH;\n\t\t\t\th = window.innerHeight;\n\t\t\t}\n\t\t\targs[0] = Math.round(w);\n\t\t\targs[1] = Math.round(h);\n\t\t} else if (args.length < 2) {\n\t\t\targs[0] = window.innerWidth;\n\t\t\targs[1] = window.innerHeight;\n\t\t}\n\t\tif (args.length < 3) args[2] = 'p2d';\n\t\t_createCanvas.call(pInst, ...args);\n\t\tthis.canvas.tabIndex = 0;\n\t\t// log(this.canvas);\n\t\tthis.canvas.addEventListener('keydown', function (e) {\n\t\t\tif (\n\t\t\t\te.key == ' ' ||\n\t\t\t\te.key == '/' ||\n\t\t\t\te.key == 'ArrowUp' ||\n\t\t\t\te.key == 'ArrowDown' ||\n\t\t\t\te.key == 'ArrowLeft' ||\n\t\t\t\te.key == 'ArrowRight'\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t});\n\t\tthis.world.resize();\n\t\tif (!userDisabledP5Errors) p5.disableFriendlyErrors = false;\n\t\tlet style = document.createElement('style');\n\n\t\t/* prevent callout to copy image, etc when tap to hold */\n\t\t/* prevent webkit from resizing text to fit */\n\t\t/* prevent copy paste, to allow, change 'none' to 'text' */\n\t\tstyle.innerHTML = `canvas { \n\t\t\toutline: none;\n\t\t\t-webkit-touch-callout: none;\n\t\t\t-webkit-text-size-adjust: none;\n\t\t\t-webkit-user-select: none;\n\t\t\toverscroll-behavior: none;\n\t\t}\n\t\tmain{\n\t\t\toverscroll-behavior: none;\n\t\t}`;\n\t\tdocument.head.appendChild(style);\n\n\t\tlet idx = navigator.userAgent.indexOf('iPhone OS');\n\t\tif (idx > -1) {\n\t\t\tlet version = navigator.userAgent.substring(idx + 10, idx + 12);\n\t\t\tthis.p5play.version = version;\n\t\t\tif (version < 16) {\n\t\t\t\tpixelDensity(1);\n\t\t\t}\n\t\t\tthis.p5play.os.platform = 'iOS';\n\t\t\tthis.p5play.os.version = version;\n\t\t} else if (navigator.userAgentData !== undefined) {\n\t\t\tthis.p5play.os.platform = navigator.userAgentData.platform;\n\t\t}\n\t};\n\n\tclass Canvas {\n\t\tconstructor() {\n\t\t\tpInst.createCanvas(...arguments);\n\t\t}\n\t}\n\n\tconst _background = this.background;\n\n\t/**\n\t * Just like the p5.js background function except it also accepts\n\t * a color pallette code.\n\t *\n\t * @method background\n\t */\n\tthis.background = function () {\n\t\tlet args = arguments;\n\t\tlet c;\n\t\tif (args.length == 1) {\n\t\t\tc = p5.prototype.colorPal(args[0]);\n\t\t}\n\t\tif (c !== undefined) _background.call(this, c);\n\t\telse _background.call(this, ...args);\n\t};\n\n\tconst _fill = this.fill;\n\n\t/**\n\t * Just like the p5.js fill function except it also accepts\n\t * a color pallette code.\n\t *\n\t * @method fill\n\t */\n\tthis.fill = function () {\n\t\tlet args = arguments;\n\t\tlet c;\n\t\tif (args.length == 1) {\n\t\t\tc = p5.prototype.colorPal(args[0]);\n\t\t}\n\t\tif (c !== undefined) _fill.call(this, c);\n\t\telse _fill.call(this, ...args);\n\t};\n\n\tconst _stroke = this.stroke;\n\n\t/**\n\t * Just like the p5.js stroke function except it also accepts\n\t * a color pallette code.\n\t *\n\t * @method stroke\n\t */\n\tthis.stroke = function () {\n\t\tlet args = arguments;\n\t\tlet c;\n\t\tif (args.length == 1) {\n\t\t\tc = p5.prototype.colorPal(args[0]);\n\t\t}\n\t\tif (c !== undefined) _stroke.call(this, c);\n\t\telse _stroke.call(this, ...args);\n\t};\n\n\t// images is a cache of loaded/loading images, to prevent making\n\t// the same loadImage fetch requests multiple times (inefficient)\n\tthis.p5play.images = {\n\t\tonLoad: (img) => {} // called anytime an image is fully loaded\n\t};\n\n\tconst _loadImage = this.loadImage;\n\n\t/**\n\t * Just like the p5.js loadImage function except it also caches images\n\t * so that they are only loaded once. Multiple calls to loadImage with\n\t * the same path will return the same image object. It also adds the\n\t * image's url as a property of the image object.\n\t *\n\t * @method loadImage\n\t * @param {string} url\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t * @param {function} [callback]\n\t */\n\tthis.loadImage = function () {\n\t\tlet args = arguments;\n\t\tlet url = args[0];\n\t\tlet img = pInst.p5play.images[url];\n\t\tlet cb;\n\t\tif (typeof args[args.length - 1] == 'function') {\n\t\t\tcb = args[args.length - 1];\n\t\t}\n\t\tif (img) {\n\t\t\t// if not finished loading, add callback to the list\n\t\t\tif (img.width == 1 && img.height == 1) {\n\t\t\t\tif (cb) {\n\t\t\t\t\timg.cbs.push(cb);\n\t\t\t\t\timg.calls++;\n\t\t\t\t} else pInst._decrementPreload();\n\t\t\t} else {\n\t\t\t\tif (cb) cb(); // if already loaded, run the callback immediately\n\t\t\t\tpInst._decrementPreload();\n\t\t\t}\n\t\t\treturn img;\n\t\t}\n\t\timg = _loadImage.call(pInst, url, (_img) => {\n\t\t\t_img.w = _img.width;\n\t\t\t_img.h = _img.height;\n\t\t\tfor (let cb of _img.cbs) {\n\t\t\t\tcb();\n\t\t\t}\n\t\t\tfor (let i = 1; i < _img.calls; i++) {\n\t\t\t\tpInst._decrementPreload();\n\t\t\t}\n\t\t\t// delete _img.calls;\n\t\t\t// delete _img.cbs;\n\t\t\t_img.cbs = [];\n\t\t\tpInst.p5play.images.onLoad(img);\n\t\t});\n\t\timg.cbs = [];\n\t\timg.calls = 1;\n\t\tif (cb) img.cbs.push(cb);\n\t\timg.url = url;\n\t\tpInst.p5play.images[url] = img;\n\t\treturn img;\n\t};\n\n\tthis.Sprite = Sprite;\n\tthis.SpriteAnimation = SpriteAnimation;\n\tthis.Group = Group;\n\tthis.World = World;\n\tthis.Canvas = Canvas;\n\n\t/**\n\t * A group of all the sprites.\n\t *\n\t * @property allSprites\n\t */\n\tthis.allSprites = new Group();\n\tthis.allSprites.autoCull = true;\n\tthis.allSprites.tileSize = 1;\n\n\t/**\n\t * The planck physics world. Use this to change gravity and offset the\n\t * sprite's coordinate system.\n\t *\n\t * @property world\n\t */\n\tthis.world = new World();\n\n\t/**\n\t * Equal to the p5.js frameCount, the amount of times the draw() function has\n\t * been called.\n\t *\n\t * @property frame\n\t */\n\tthis.frame = 0;\n\n\t/**\n\t * The default camera. Use this to pan and zoom the camera.\n\t *\n\t * @property camera\n\t */\n\tthis.camera = new Camera();\n\n\t/**\n\t * Look at the Input reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/input_devices.html\n\t *\n\t * Root class for storing the state of inputs (mouse, keyboard,\n\t * gamepads).\n\t *\n\t * -3 means input was released after being held, pressed for 12 frames\n\t * -2 means input was pressed and released on the same frame\n\t * -1 means input was released\n\t * 0 means input is not pressed\n\t * 1 means input was pressed\n\t * >1 means input is still being pressed\n\t * 12 means input was held\n\t * >12 means input is being held\n\t *\n\t * @class InputDevice\n\t */\n\tclass InputDevice {\n\t\tconstructor() {\n\t\t\t/**\n\t\t\t * The amount of frames an input must be pressed to be considered held.\n\t\t\t * Default is 12.\n\t\t\t *\n\t\t\t * @property holdThreshold\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tthis.holdThreshold = 12;\n\t\t}\n\n\t\tinit(inputs) {\n\t\t\tfor (let inp of inputs) {\n\t\t\t\tthis[inp] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Attempt to auto-correct the user's input. Inheriting classes\n\t\t * override this method.\n\t\t */\n\t\tac(inp) {\n\t\t\treturn inp;\n\t\t}\n\n\t\tpresses(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] == 1 || this[inp] == -2;\n\t\t}\n\n\t\tpressing(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] > 0 || this[inp] == -2;\n\t\t}\n\n\t\tpressed(inp) {\n\t\t\treturn this.released(inp);\n\t\t}\n\n\t\tholds(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] == this.holdThreshold;\n\t\t}\n\n\t\tholding(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] >= this.holdThreshold;\n\t\t}\n\n\t\theld(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] == -3;\n\t\t}\n\n\t\treleased(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] <= -1;\n\t\t}\n\n\t\treleases(inp) {\n\t\t\treturn this.released(inp);\n\t\t}\n\t}\n\n\tclass Mouse extends InputDevice {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tlet inputs = ['x', 'y', 'left', 'center', 'right'];\n\t\t\tthis.init(inputs);\n\t\t\tthis.default = 'left';\n\t\t\tthis.draggable = false;\n\t\t}\n\n\t\tac(inp) {\n\t\t\tif (inp.slice(0, 4)) inp = 'left';\n\t\t\telse if (inp.slice(0, 5) == 'right') inp = 'right';\n\t\t\telse if (inp.slice(0, 6) == 'middle') inp = 'center';\n\t\t\telse inp = inp.toLowerCase();\n\t\t\treturn inp;\n\t\t}\n\n\t\tdragging(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tthis.draggable = true;\n\t\t\treturn this[inp] >= this.holdThreshold;\n\t\t}\n\n\t\tget isOnCanvas() {\n\t\t\treturn this.x >= 0 && this.x < pInst.width && this.y >= 0 && this.y < pInst.height;\n\t\t}\n\t}\n\n\t/**\n\t * Stores the state of the left, center, or right mouse buttons.\n\t *\n\t * @property mouse\n\t */\n\tthis.mouse = new Mouse();\n\n\tclass SpriteMouse extends Mouse {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.hover = 0;\n\t\t}\n\n\t\thovers() {\n\t\t\treturn this.hover == 1;\n\t\t}\n\n\t\thovering() {\n\t\t\treturn this.hover > 0;\n\t\t}\n\n\t\thovered() {\n\t\t\treturn this.hover == -1;\n\t\t}\n\t}\n\n\tconst _onmousedown = this._onmousedown;\n\n\tconst __onmousedown = function (btn) {\n\t\tthis.mouse[btn]++;\n\n\t\tlet ms;\n\t\tif (this.p5play.mouseSprites.length) {\n\t\t\tms = this.p5play.mouseSprites[0];\n\t\t\tms.mouse[btn] = 1;\n\t\t\t// old mouse sprite didn't have the mouse released on it\n\t\t\t// so it just gets set to 0 (not pressed)\n\t\t\tif (this.p5play.mouseSprite) {\n\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = 0;\n\t\t\t\tif (btn == 'left') {\n\t\t\t\t\tthis.p5play.mouseSprite.mouse.draggable = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.p5play.mouseSprite = ms;\n\t\t}\n\t};\n\n\tthis._onmousedown = function (e) {\n\t\tlet btn = 'left';\n\t\tif (e.button === 1) btn = 'center';\n\t\telse if (e.button === 2) btn = 'right';\n\n\t\t__onmousedown.call(this, btn);\n\n\t\t_onmousedown.call(this, e);\n\t};\n\n\tconst _ontouchstart = this._ontouchstart;\n\n\tthis._ontouchstart = function (e) {\n\t\t__onmousedown.call(this, 'left');\n\t\t_ontouchstart.call(this, e);\n\t};\n\n\tconst _onmouseup = this._onmouseup;\n\n\tconst __onmouseup = function (btn) {\n\t\tif (this.mouse[btn] >= this.mouse.holdThreshold) {\n\t\t\tthis.mouse[btn] = -3;\n\t\t} else if (this.mouse[btn] > 1) this.mouse[btn] = -1;\n\t\telse this.mouse[btn] = -2;\n\n\t\tif (this.p5play.mouseSprite) {\n\t\t\tif (this.p5play.mouseSprite.mouse.hover > 1) {\n\t\t\t\tif (this.p5play.mouseSprite.mouse[btn] >= this.mouse.holdThreshold) {\n\t\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = -3;\n\t\t\t\t} else if (this.p5play.mouseSprite.mouse[btn] > 1) {\n\t\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = -1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = -2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = 0;\n\t\t\t\tthis.p5play.mouseSprite.mouse.draggable = false;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis._onmouseup = function (e) {\n\t\tlet btn = 'left';\n\t\tif (e.button === 1) btn = 'center';\n\t\telse if (e.button === 2) btn = 'right';\n\n\t\t__onmouseup.call(this, btn);\n\t\t_onmouseup.call(this, e);\n\t};\n\n\tconst _ontouchend = this._ontouchend;\n\n\tthis._ontouchend = function (e) {\n\t\t__onmouseup.call(this, 'left');\n\t\t_ontouchend.call(this, e);\n\t};\n\n\tclass KeyBoard extends InputDevice {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.default = ' ';\n\t\t}\n\n\t\tac(inp) {\n\t\t\tif (inp.length == 1) return inp.toLowerCase();\n\t\t\tif (!isNaN(inp)) {\n\t\t\t\tif (inp == 38) return 'ArrowUp';\n\t\t\t\tif (inp == 40) return 'ArrowDown';\n\t\t\t\tif (inp == 37) return 'ArrowLeft';\n\t\t\t\tif (inp == 39) return 'ArrowRight';\n\t\t\t\tthrow new Error('Use key names with the keyboard input functions, not key codes!');\n\t\t\t}\n\t\t\treturn inp[0].toUpperCase() + inp.slice(1).toLowerCase();\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * \n\t * @property kb (keyboard)\n\t * @example\n\t// presses\n\tif (kb.presses('x')) {\n\t\tplayer.jump();\n\t}\n \n\t// holds\n\tif (kb.holds('e')) {\n\t\tplayer.chargeAttack();\n\t}\n\n\t// released\n\tif (kb.released('q')) {\n\t\tplayer.slide();\n\t}\n\t */\n\tthis.kb = new KeyBoard();\n\tthis.keyboard = this.kb;\n\n\tif (navigator.keyboard) {\n\t\tconst keyboard = navigator.keyboard;\n\t\tif (window == window.top) {\n\t\t\tkeyboard.getLayoutMap().then((keyboardLayoutMap) => {\n\t\t\t\tconst key = keyboardLayoutMap.get('KeyW');\n\t\t\t\tif (key != 'w') this.p5play.standardizeKeyboard = true;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.p5play.standardizeKeyboard = true;\n\t\t}\n\t} else {\n\t\t// Firefox doesn't have navigator.keyboard\n\t\t// so just make it use key codes\n\t\tthis.p5play.standardizeKeyboard = true;\n\t}\n\n\tfunction getKeyFromCode(e) {\n\t\tlet code = e.code;\n\t\tif (code.length == 4 && code.slice(0, 3) == 'Key') {\n\t\t\treturn code[3].toLowerCase();\n\t\t}\n\t\treturn e.key;\n\t}\n\n\tlet simpleKeyControls = {\n\t\tw: 'up',\n\t\ts: 'down',\n\t\ta: 'left',\n\t\td: 'right',\n\t\ti: 'up2',\n\t\tk: 'down2',\n\t\tj: 'left2',\n\t\tl: 'right2'\n\t};\n\n\tconst _onkeydown = this._onkeydown;\n\n\tthis._onkeydown = function (e) {\n\t\tlet key = e.key;\n\t\tif (this.p5play.standardizeKeyboard) {\n\t\t\tkey = getKeyFromCode(e);\n\t\t}\n\t\tlet keys = [key];\n\t\tlet k = simpleKeyControls[key];\n\t\tif (k) keys.push(k);\n\t\tfor (let k of keys) {\n\t\t\tif (!this.kb[k] || this.kb[k] < 0) {\n\t\t\t\tthis.kb[k] = 1;\n\t\t\t}\n\t\t}\n\t\t_onkeydown.call(this, e);\n\t};\n\n\tconst _onkeyup = this._onkeyup;\n\n\tthis._onkeyup = function (e) {\n\t\tlet key = e.key;\n\t\tif (this.p5play.standardizeKeyboard) {\n\t\t\tkey = getKeyFromCode(e);\n\t\t}\n\t\tlet keys = [key];\n\t\tlet k = simpleKeyControls[key];\n\t\tif (k) keys.push(k);\n\t\tfor (let k of keys) {\n\t\t\tif (this.kb[k] >= this.kb.holdThreshold) {\n\t\t\t\tthis.kb[k] = -3;\n\t\t\t} else if (this.kb[k] > 1) this.kb[k] = -1;\n\t\t\telse this.kb[k] = -2;\n\t\t}\n\n\t\t_onkeyup.call(this, e);\n\t};\n\n\tclass Contro extends InputDevice {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tlet inputs = [\n\t\t\t\t'a',\n\t\t\t\t'b',\n\t\t\t\t'x',\n\t\t\t\t'y',\n\t\t\t\t'l',\n\t\t\t\t'r',\n\t\t\t\t'lt',\n\t\t\t\t'rt',\n\t\t\t\t'select',\n\t\t\t\t'start',\n\t\t\t\t'up',\n\t\t\t\t'down',\n\t\t\t\t'left',\n\t\t\t\t'right',\n\t\t\t\t'leftTrigger',\n\t\t\t\t'rightTrigger'\n\t\t\t];\n\t\t\tthis.init(inputs);\n\n\t\t\tthis.leftStick = {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tbtn: 0\n\t\t\t};\n\n\t\t\tthis.rightStick = {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tbtn: 0\n\t\t\t};\n\n\t\t\tthis._btns = {\n\t\t\t\ta: 0,\n\t\t\t\tb: 1,\n\t\t\t\tx: 2,\n\t\t\t\ty: 3,\n\t\t\t\tl: 4,\n\t\t\t\tr: 5,\n\t\t\t\tlt: 6,\n\t\t\t\trt: 7,\n\t\t\t\tselect: 8,\n\t\t\t\tstart: 9,\n\t\t\t\t// leftStickBtn: 10,\n\t\t\t\t// rightStickBtn: 11,\n\t\t\t\tup: 12,\n\t\t\t\tdown: 13,\n\t\t\t\tleft: 14,\n\t\t\t\tright: 15\n\t\t\t};\n\t\t\tthis._axes = {\n\t\t\t\tleftStick: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 1\n\t\t\t\t},\n\t\t\t\trightStick: {\n\t\t\t\t\tx: 2,\n\t\t\t\t\ty: 3\n\t\t\t\t},\n\t\t\t\tleftTrigger: 4,\n\t\t\t\trightTrigger: 5\n\t\t\t};\n\t\t}\n\n\t\tac(inp) {\n\t\t\treturn inp.toLowerCase();\n\t\t}\n\n\t\t_update() {\n\t\t\tthis.gamepad = navigator.getGamepads()[this.gamepad.index];\n\t\t\t// TODO\n\t\t\t// if (this.index != this.gamepad.index) {\n\t\t\t// \treturn; // contro disconnected\n\t\t\t// }\n\t\t\tlet pad = this.gamepad;\n\n\t\t\t// buttons\n\t\t\tfor (let name in this._btns) {\n\t\t\t\tlet idx = this._btns[name];\n\t\t\t\tif (pad.buttons[idx].pressed) this[name]++;\n\t\t\t\telse this[name] = 0;\n\t\t\t}\n\n\t\t\t// sticks\n\t\t\tthis.leftStick.x = pad.axes[this._axes.leftStick.x];\n\t\t\tthis.leftStick.y = pad.axes[this._axes.leftStick.y];\n\n\t\t\tthis.rightStick.x = pad.axes[this._axes.rightStick.x];\n\t\t\tthis.rightStick.y = pad.axes[this._axes.rightStick.y];\n\n\t\t\t// TODO\n\t\t\t// triggers\n\t\t\tthis.leftTrigger = pad.axes[this._axes.leftTrigger];\n\t\t\tthis.rightTrigger = pad.axes[this._axes.rightTrigger];\n\n\t\t\treturn true; // update completed\n\t\t}\n\t}\n\n\tclass Contros extends Array {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tlet _this = this;\n\t\t\twindow.addEventListener('gamepadconnected', (e) => {\n\t\t\t\t_this._addContro(e.gamepad);\n\t\t\t});\n\n\t\t\tthis.default = 'a';\n\n\t\t\tlet methods = ['presses', 'pressing', 'pressed', 'holds', 'holding', 'held', 'released'];\n\t\t\tfor (let m of methods) {\n\t\t\t\tthis[m] = (inp) => {\n\t\t\t\t\tif (this[0]) return this[0][m](inp);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tlet props = ['leftStick', 'rightStick'];\n\t\t\tfor (let prop of props) {\n\t\t\t\tthis[prop] = {};\n\t\t\t\tfor (let axis of ['x', 'y']) {\n\t\t\t\t\tObject.defineProperty(this[prop], axis, {\n\t\t\t\t\t\tget() {\n\t\t\t\t\t\t\tif (_this[0]) return _this[0][prop][axis];\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_addContro(gp) {\n\t\t\tlet contro = new Contro();\n\t\t\tcontro.gamepad = gp;\n\t\t\tcontro.id = gp.id;\n\t\t\tthis.push(contro);\n\t\t}\n\n\t\t_update() {\n\t\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\t\tlet connected = this[i]._update();\n\t\t\t\tif (!connected) {\n\t\t\t\t\tthis.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.contro = new Contros();\n});\n\n// called before each p5.js draw function call\np5.prototype.registerMethod('pre', function () {\n\tif (this.frameCount == 1) {\n\t\tthis.camera.x = this.world.hw;\n\t\tthis.camera.y = this.world.hh;\n\t\tthis.camera.init = true;\n\n\t\t// this stops the right click menu from appearing\n\t\tthis.canvas.addEventListener('contextmenu', (event) => event.preventDefault());\n\t}\n\n\tthis.mouse.x = (this.mouseX - this.world.hw) / this.camera.zoom + this.camera.x;\n\tthis.mouse.y = (this.mouseY - this.world.hh) / this.camera.zoom + this.camera.y;\n\n\tthis.camera.mouse.x = this.mouseX;\n\tthis.camera.mouse.y = this.mouseY;\n\n\tthis.contro._update();\n});\n\n// called after each p5.js draw function call\np5.prototype.registerMethod('post', function p5playPostDraw() {\n\tthis.frame = this.frameCount;\n\n\tif (this.p5play.autoDrawSprites) {\n\t\tthis.camera.on();\n\t\tthis.allSprites.draw();\n\t\tthis.camera.off();\n\t\tthis.p5play.autoDrawSprites = true;\n\t}\n\n\tif (this.p5play.autoUpdateSprites) {\n\t\tthis.updateSprites();\n\t\tthis.p5play.autoUpdateSprites = true;\n\t}\n\n\tif (this.allSprites.autoCull) {\n\t\tthis.allSprites.cull(10000);\n\t}\n\n\tfor (let btn of ['left', 'center', 'right']) {\n\t\tif (this.mouse[btn] < 0) this.mouse[btn] = 0;\n\t\telse if (this.mouse[btn] > 0) this.mouse[btn]++;\n\n\t\tif (this.p5play.mouseSprite) {\n\t\t\tif (this.p5play.mouseSprite.mouse[btn] < 0) {\n\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (let k in this.kb) {\n\t\tif (k == 'holdThreshold') continue;\n\t\tif (this.kb[k] < 0) this.kb[k] = 0;\n\t\telse if (this.kb[k] > 0) this.kb[k]++;\n\t}\n\n\tif (this.p5play.mouseTracking) {\n\t\tif (this.p5play.mouseSprite) {\n\t\t\tlet val = 0;\n\t\t\tfor (let btn of ['left', 'center', 'right']) {\n\t\t\t\tval += this.p5play.mouseSprite.mouse[btn];\n\t\t\t}\n\t\t\tif (val == 0) this.p5play.mouseSprite = null;\n\t\t}\n\n\t\tlet sprites = p5.prototype.getSpritesAt(this.mouse.x, this.mouse.y);\n\t\tsprites.sort((a, b) => (a.layer - b.layer) * -1);\n\n\t\tlet uiSprites = p5.prototype.getSpritesAt(this.camera.mouse.x, this.camera.mouse.y, this.allSprites, false);\n\t\tuiSprites.sort((a, b) => (a.layer - b.layer) * -1);\n\n\t\tsprites = sprites.concat(uiSprites);\n\n\t\tlet ms;\n\t\tif (this.mouse.pressing('left') || this.mouse.pressing('center') || this.mouse.pressing('right')) {\n\t\t\t// mouse sprite is not draggable\n\t\t\tif (!this.p5play.mouseSprite?.mouse.draggable) {\n\t\t\t\t// if sprite is being dragged,\n\t\t\t\t// it should be dragged behind sprites on higher layers\n\t\t\t\tfor (let s of sprites) {\n\t\t\t\t\tif (s == this.p5play.mouseSprite) {\n\t\t\t\t\t\tms = s;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tms = this.p5play.mouseSprite;\n\t\t\t}\n\t\t\t// if mouse is pressing the sprite\n\t\t\tif (ms) {\n\t\t\t\tms.mouse.left = this.mouse.left;\n\t\t\t\tms.mouse.center = this.mouse.center;\n\t\t\t\tms.mouse.right = this.mouse.right;\n\t\t\t\tms.mouse.x = ms.x - this.mouse.x;\n\t\t\t\tms.mouse.y = ms.y - this.mouse.y;\n\t\t\t} else if (this.p5play.mouseSprite) {\n\t\t\t\tthis.p5play.mouseSprite.mouse.left = 0;\n\t\t\t\tthis.p5play.mouseSprite.mouse.center = 0;\n\t\t\t\tthis.p5play.mouseSprite.mouse.right = 0;\n\t\t\t\tthis.p5play.mouseSprite.mouse.draggable = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (let s of sprites) {\n\t\t\ts.mouse.hover++;\n\t\t}\n\n\t\tfor (let s of this.p5play.mouseSprites) {\n\t\t\tif ((!this.p5play.mouseSprite?.mouse.draggable || s != ms) && !sprites.includes(s)) {\n\t\t\t\ts.mouse.hover = -1;\n\t\t\t\ts.mouse.left = 0;\n\t\t\t\ts.mouse.center = 0;\n\t\t\t\ts.mouse.right = 0;\n\t\t\t\ts.mouse.draggable = false;\n\t\t\t}\n\t\t}\n\t\tthis.p5play.mouseSprites = sprites;\n\t}\n\n\tthis.camera.off();\n});\n"],"names":[],"version":3,"file":"index.6a342110.js.map","sourceRoot":"/__parcel_source_root/"}